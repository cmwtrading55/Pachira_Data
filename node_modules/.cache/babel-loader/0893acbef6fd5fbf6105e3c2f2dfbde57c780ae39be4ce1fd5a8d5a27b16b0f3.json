{"ast":null,"code":"// src/utils/Calculations.js\n// Function to calculate weekly summary\nexport const calculateWeeklySummary=(dailyData,tabNames)=>{const weeklySummary={};dailyData.forEach(row=>{const dateParts=row.date.split('/');const[day,month,year]=dateParts.map(Number);const dateObj=new Date(year,month-1,day);const weekStart=new Date(dateObj.setDate(dateObj.getDate()-dateObj.getDay()+1));const weekKey=weekStart.toISOString().split('T')[0];if(!weeklySummary[weekKey]){weeklySummary[weekKey]={weekStart:weekKey};}tabNames.forEach(tab=>{weeklySummary[weekKey][tab]=(weeklySummary[weekKey][tab]||0)+(row[tab]||0);});weeklySummary[weekKey].Total=(weeklySummary[weekKey].Total||0)+row.Total;});return Object.values(weeklySummary);};// Function to calculate all summary\nexport const calculateAllSummary=(dailyData,tabNames)=>{const totalSummary={};dailyData.forEach(row=>{tabNames.forEach(tab=>{totalSummary[tab]=totalSummary[tab]||{totalPL:0,totalTurnover:0,roi:0};totalSummary[tab].totalPL+=row[tab]||0;totalSummary[tab].totalTurnover+=row[`turnover_${tab}`]||0;});});// Calculate ROI and add to summary data\nreturn Object.entries(totalSummary).map(_ref=>{let[tab,totals]=_ref;const roi=totals.totalTurnover!==0?totals.totalPL/totals.totalTurnover*100:0;return{tabName:tab,totalPL:totals.totalPL,totalTurnover:totals.totalTurnover,roi};});};// Function to calculate total row for All Summary\nexport const calculateTotalRow=allSummaryData=>{const totalPL=allSummaryData.reduce((sum,row)=>sum+row.totalPL,0);const totalTurnover=allSummaryData.reduce((sum,row)=>sum+row.totalTurnover,0);const roi=totalTurnover!==0?totalPL/totalTurnover*100:0;return{tabName:'Total',totalPL,totalTurnover,roi};};","map":{"version":3,"names":["calculateWeeklySummary","dailyData","tabNames","weeklySummary","forEach","row","dateParts","date","split","day","month","year","map","Number","dateObj","Date","weekStart","setDate","getDate","getDay","weekKey","toISOString","tab","Total","Object","values","calculateAllSummary","totalSummary","totalPL","totalTurnover","roi","entries","_ref","totals","tabName","calculateTotalRow","allSummaryData","reduce","sum"],"sources":["C:/Users/CMW1/Downloads/pachira-financials/src/utils/Calculations.js"],"sourcesContent":["// src/utils/Calculations.js\r\n\r\n// Function to calculate weekly summary\r\nexport const calculateWeeklySummary = (dailyData, tabNames) => {\r\n  const weeklySummary = {};\r\n\r\n  dailyData.forEach(row => {\r\n    const dateParts = row.date.split('/');\r\n    const [day, month, year] = dateParts.map(Number);\r\n    const dateObj = new Date(year, month - 1, day);\r\n    const weekStart = new Date(dateObj.setDate(dateObj.getDate() - dateObj.getDay() + 1));\r\n    const weekKey = weekStart.toISOString().split('T')[0];\r\n\r\n    if (!weeklySummary[weekKey]) {\r\n      weeklySummary[weekKey] = { weekStart: weekKey };\r\n    }\r\n\r\n    tabNames.forEach(tab => {\r\n      weeklySummary[weekKey][tab] = (weeklySummary[weekKey][tab] || 0) + (row[tab] || 0);\r\n    });\r\n\r\n    weeklySummary[weekKey].Total = (weeklySummary[weekKey].Total || 0) + row.Total;\r\n  });\r\n\r\n  return Object.values(weeklySummary);\r\n};\r\n\r\n// Function to calculate all summary\r\nexport const calculateAllSummary = (dailyData, tabNames) => {\r\n  const totalSummary = {};\r\n\r\n  dailyData.forEach(row => {\r\n    tabNames.forEach(tab => {\r\n      totalSummary[tab] = totalSummary[tab] || { totalPL: 0, totalTurnover: 0, roi: 0 };\r\n      totalSummary[tab].totalPL += row[tab] || 0;\r\n      totalSummary[tab].totalTurnover += row[`turnover_${tab}`] || 0;\r\n    });\r\n  });\r\n\r\n  // Calculate ROI and add to summary data\r\n  return Object.entries(totalSummary).map(([tab, totals]) => {\r\n    const roi = totals.totalTurnover !== 0 ? (totals.totalPL / totals.totalTurnover) * 100 : 0;\r\n    return {\r\n      tabName: tab,\r\n      totalPL: totals.totalPL,\r\n      totalTurnover: totals.totalTurnover,\r\n      roi\r\n    };\r\n  });\r\n};\r\n\r\n// Function to calculate total row for All Summary\r\nexport const calculateTotalRow = (allSummaryData) => {\r\n  const totalPL = allSummaryData.reduce((sum, row) => sum + row.totalPL, 0);\r\n  const totalTurnover = allSummaryData.reduce((sum, row) => sum + row.totalTurnover, 0);\r\n  const roi = totalTurnover !== 0 ? (totalPL / totalTurnover) * 100 : 0;\r\n\r\n  return {\r\n    tabName: 'Total',\r\n    totalPL,\r\n    totalTurnover,\r\n    roi\r\n  };\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}