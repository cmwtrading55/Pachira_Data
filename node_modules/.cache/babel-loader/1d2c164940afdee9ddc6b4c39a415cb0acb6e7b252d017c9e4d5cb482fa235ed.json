{"ast":null,"code":"// src/utils/DataFetcher.js\nimport axios from 'axios';\n\n// Function to fetch data from Google Sheets\nexport const fetchDataFromSheet = async (sheetId, apiKey, tabNames) => {\n  try {\n    const tabDataPromises = tabNames.map(tab => {\n      const apiUrl = `https://sheets.googleapis.com/v4/spreadsheets/${sheetId}/values/${tab}?key=${apiKey}`;\n      console.log(`Fetching data for ${tab} from URL: ${apiUrl}`);\n      return axios.get(apiUrl).then(response => ({\n        tabName: tab,\n        data: response.data\n      })).catch(error => {\n        console.error(`Error fetching data for ${tab}:`, error);\n        return {\n          tabName: tab,\n          data: null,\n          error\n        };\n      });\n    });\n    const tabDataResults = await Promise.all(tabDataPromises);\n    return tabDataResults;\n  } catch (error) {\n    throw new Error('Error fetching data from Google Sheets');\n  }\n};","map":{"version":3,"names":["axios","fetchDataFromSheet","sheetId","apiKey","tabNames","tabDataPromises","map","tab","apiUrl","console","log","get","then","response","tabName","data","catch","error","tabDataResults","Promise","all","Error"],"sources":["C:/Users/CMW1/Downloads/pachira-financials/src/utils/DataFetcher.js"],"sourcesContent":["// src/utils/DataFetcher.js\r\nimport axios from 'axios';\r\n\r\n// Function to fetch data from Google Sheets\r\nexport const fetchDataFromSheet = async (sheetId, apiKey, tabNames) => {\r\n  try {\r\n    const tabDataPromises = tabNames.map((tab) => {\r\n      const apiUrl = `https://sheets.googleapis.com/v4/spreadsheets/${sheetId}/values/${tab}?key=${apiKey}`;\r\n      console.log(`Fetching data for ${tab} from URL: ${apiUrl}`);\r\n      return axios.get(apiUrl)\r\n        .then(response => ({ tabName: tab, data: response.data }))\r\n        .catch(error => {\r\n          console.error(`Error fetching data for ${tab}:`, error);\r\n          return { tabName: tab, data: null, error };\r\n        });\r\n    });\r\n\r\n    const tabDataResults = await Promise.all(tabDataPromises);\r\n    return tabDataResults;\r\n  } catch (error) {\r\n    throw new Error('Error fetching data from Google Sheets');\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,kBAAkB,GAAG,MAAAA,CAAOC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,KAAK;EACrE,IAAI;IACF,MAAMC,eAAe,GAAGD,QAAQ,CAACE,GAAG,CAAEC,GAAG,IAAK;MAC5C,MAAMC,MAAM,GAAG,iDAAiDN,OAAO,WAAWK,GAAG,QAAQJ,MAAM,EAAE;MACrGM,OAAO,CAACC,GAAG,CAAC,qBAAqBH,GAAG,cAAcC,MAAM,EAAE,CAAC;MAC3D,OAAOR,KAAK,CAACW,GAAG,CAACH,MAAM,CAAC,CACrBI,IAAI,CAACC,QAAQ,KAAK;QAAEC,OAAO,EAAEP,GAAG;QAAEQ,IAAI,EAAEF,QAAQ,CAACE;MAAK,CAAC,CAAC,CAAC,CACzDC,KAAK,CAACC,KAAK,IAAI;QACdR,OAAO,CAACQ,KAAK,CAAC,2BAA2BV,GAAG,GAAG,EAAEU,KAAK,CAAC;QACvD,OAAO;UAAEH,OAAO,EAAEP,GAAG;UAAEQ,IAAI,EAAE,IAAI;UAAEE;QAAM,CAAC;MAC5C,CAAC,CAAC;IACN,CAAC,CAAC;IAEF,MAAMC,cAAc,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACf,eAAe,CAAC;IACzD,OAAOa,cAAc;EACvB,CAAC,CAAC,OAAOD,KAAK,EAAE;IACd,MAAM,IAAII,KAAK,CAAC,wCAAwC,CAAC;EAC3D;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}