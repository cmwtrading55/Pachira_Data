{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CMW1\\\\Downloads\\\\pachira-financials\\\\src\\\\components\\\\GoogleSheetData.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport axios from 'axios';\nimport './GoogleSheetData.css'; // Import CSS for conditional formatting\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GoogleSheetData = () => {\n  _s();\n  const [summaryData, setSummaryData] = useState([]);\n  const [weeklySummaryData, setWeeklySummaryData] = useState([]);\n  const [allSummaryData, setAllSummaryData] = useState([]);\n  const [dailyPachiraIncome, setDailyPachiraIncome] = useState([]);\n  const [weeklyPachiraIncome, setWeeklyPachiraIncome] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [sortConfig, setSortConfig] = useState({\n    key: 'date',\n    direction: 'ascending'\n  });\n  const [view, setView] = useState('daily'); // Track current view (daily, weekly, all, dailyIncome, weeklyIncome)\n\n  const sheetId = '1D2B33Uj1vS_weRZQAQdMRcaQbk1KG1SAjNfoaHAKrSo'; // Your Google Sheet ID\n  const apiKey = 'AIzaSyBAPhvHyE-PbFUktWwlt-2_KJfwQTabEvQ'; // Your API Key\n\n  // Memoize the tabNames array to prevent re-creation on each render\n  const tabNames = useMemo(() => ['S1x', 'S2x', 'S3PM', 'S3IR', 'follow', 'Tennis', 'MLB', 'American Football'], []);\n  const incomeTabs = useMemo(() => ['Tennis', 'MLB', 'American Football'], []);\n  const plColumnIndex = 8; // Index for the P/L column (Column I for 'follow' tab)\n  const turnoverColumnIndex = 5; // Index for the Turnover column (Column F)\n  const incomeColumnIndex = 10; // Index for the Income column (Column K)\n\n  // Function to format numbers with commas\n  const formatNumber = num => {\n    if (num !== null && !isNaN(num)) {\n      return num.toLocaleString(); // Adds commas to the number\n    }\n    return '-';\n  };\n\n  // Function to calculate daily Pachira Income\n  const calculateDailyPachiraIncome = useCallback(data => {\n    const dailyIncome = {};\n    data.forEach(row => {\n      const date = row.date;\n      if (!dailyIncome[date]) {\n        dailyIncome[date] = {\n          date,\n          income: 0\n        };\n      }\n      incomeTabs.forEach(tab => {\n        dailyIncome[date].income += row[`income_${tab}`] || 0;\n      });\n      dailyIncome[date].income += row.follow || 0;\n    });\n    setDailyPachiraIncome(Object.values(dailyIncome));\n  }, [incomeTabs]);\n\n  // Function to calculate weekly Pachira Income\n  const calculateWeeklyPachiraIncome = useCallback(data => {\n    const weeklyIncome = {};\n    data.forEach(row => {\n      const dateObj = new Date(row.date.split('/').reverse().join('-'));\n      const weekStart = new Date(dateObj.setDate(dateObj.getDate() - dateObj.getDay() + 1)); // Get Monday of the week\n      const weekKey = weekStart.toISOString().split('T')[0]; // Use ISO string as key for grouping\n\n      if (!weeklyIncome[weekKey]) {\n        weeklyIncome[weekKey] = {\n          weekStart: weekKey,\n          income: 0\n        };\n      }\n      incomeTabs.forEach(tab => {\n        weeklyIncome[weekKey].income += row[`income_${tab}`] || 0;\n      });\n      weeklyIncome[weekKey].income += row.follow || 0;\n    });\n    setWeeklyPachiraIncome(Object.values(weeklyIncome));\n  }, [incomeTabs]);\n  useEffect(() => {\n    const fetchAllData = async () => {\n      try {\n        // Fetch data from all tabs\n        const tabDataPromises = tabNames.map(tab => {\n          const apiUrl = `https://sheets.googleapis.com/v4/spreadsheets/${sheetId}/values/${tab}?key=${apiKey}`;\n          console.log(`Fetching data for ${tab} from URL: ${apiUrl}`);\n          return axios.get(apiUrl).then(response => ({\n            tabName: tab,\n            data: response.data\n          })).catch(error => {\n            console.error(`Error fetching data for ${tab}:`, error);\n            return {\n              tabName: tab,\n              data: null,\n              error\n            };\n          });\n        });\n\n        // Wait for all promises to resolve\n        const tabDataResults = await Promise.all(tabDataPromises);\n\n        // Combine all data into a summary object\n        const summary = {};\n        tabDataResults.forEach(({\n          tabName,\n          data,\n          error\n        }) => {\n          if (data === null) {\n            console.error(`No data received for ${tabName}. Error:`, error !== null && error !== void 0 && error.response ? error.response.data : error.message);\n            return;\n          }\n          const tabData = data.values || [];\n\n          // Debugging: Log the first few rows to check structure\n          console.log(`Data for ${tabName}:`, tabData.slice(0, 5));\n\n          // Check if there is data in the tab\n          if (tabData.length < 2) {\n            console.warn(`No data found in tab ${tabName}`);\n          } else {\n            console.log(`Total rows in ${tabName}:`, tabData.length);\n          }\n\n          // Skip the header row and process each row\n          tabData.slice(1).forEach((row, rowIndex) => {\n            var _row$incomeColumnInde;\n            const date = row[0]; // Date column\n\n            // Check if P/L or Income column exists and has a valid number\n            const income = tabName === 'follow' ? parseFloat(row[plColumnIndex].replace(/,/g, '').trim()) : parseFloat((_row$incomeColumnInde = row[incomeColumnIndex]) === null || _row$incomeColumnInde === void 0 ? void 0 : _row$incomeColumnInde.replace(/,/g, '').trim());\n            if (!isNaN(income)) {\n              if (!summary[date]) {\n                summary[date] = {\n                  date\n                };\n              }\n              summary[date][`income_${tabName}`] = (summary[date][`income_${tabName}`] || 0) + income;\n\n              // Debugging: Log each row processing\n              console.log(`Processing row ${rowIndex + 1} for ${tabName} on ${date}:`, row, `Parsed Income: ${income}`);\n            } else {\n              console.warn(`Invalid Income value at row ${rowIndex + 1} for ${tabName} on ${date}`);\n            }\n          });\n        });\n\n        // Convert summary object to array and calculate daily/weekly Pachira income\n        const summaryArray = Object.values(summary);\n        calculateDailyPachiraIncome(summaryArray);\n        calculateWeeklyPachiraIncome(summaryArray);\n      } catch (error) {\n        setError('Error fetching data');\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAllData();\n  }, [apiKey, sheetId, tabNames, calculateDailyPachiraIncome, calculateWeeklyPachiraIncome]); // Added missing dependencies\n\n  const sortData = key => {\n    let direction = 'ascending';\n    if (sortConfig.key === key && sortConfig.direction === 'ascending') {\n      direction = 'descending';\n    }\n    const dataToSort = view === 'daily' ? summaryData : view === 'weekly' ? weeklySummaryData : view === 'all' ? allSummaryData : view === 'dailyIncome' ? dailyPachiraIncome : weeklyPachiraIncome;\n    const sortedData = [...dataToSort].sort((a, b) => {\n      if (key === 'date' || key === 'weekStart') {\n        // For date or weekStart, convert to Date object and compare\n        return direction === 'ascending' ? new Date(a[key].split('/').reverse().join('-')) - new Date(b[key].split('/').reverse().join('-')) : new Date(b[key].split('/').reverse().join('-')) - new Date(a[key].split('/').reverse().join('-'));\n      } else {\n        // For other columns, compare numerical values\n        const aValue = a[key] !== undefined ? a[key] : 0;\n        const bValue = b[key] !== undefined ? b[key] : 0;\n        return direction === 'ascending' ? aValue - bValue : bValue - aValue;\n      }\n    });\n    if (view === 'daily') {\n      setSummaryData(sortedData);\n    } else if (view === 'weekly') {\n      setWeeklySummaryData(sortedData);\n    } else if (view === 'all') {\n      setAllSummaryData(sortedData);\n    } else if (view === 'dailyIncome') {\n      setDailyPachiraIncome(sortedData);\n    } else if (view === 'weeklyIncome') {\n      setWeeklyPachiraIncome(sortedData);\n    }\n    setSortConfig({\n      key,\n      direction\n    });\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 21\n  }, this);\n\n  // Function to render different tables based on view type\n  const renderTable = (data, isWeekly, isAllSummary, isIncome) => /*#__PURE__*/_jsxDEV(\"table\", {\n    border: \"1\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: isIncome ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sortData(isWeekly ? 'weekStart' : 'date'),\n            children: [isWeekly ? 'Week Starting' : 'Date', \" \", sortConfig.key === (isWeekly ? 'weekStart' : 'date') ? sortConfig.direction === 'ascending' ? '↑' : '↓' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sortData('income'),\n            children: [\"Income \", sortConfig.key === 'income' ? sortConfig.direction === 'ascending' ? '↑' : '↓' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : isAllSummary ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sortData('tabName'),\n            children: [\"Tab \", sortConfig.key === 'tabName' ? sortConfig.direction === 'ascending' ? '↑' : '↓' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sortData('totalPL'),\n            children: [\"Total P/L \", sortConfig.key === 'totalPL' ? sortConfig.direction === 'ascending' ? '↑' : '↓' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sortData('totalTurnover'),\n            children: [\"Total Turnover \", sortConfig.key === 'totalTurnover' ? sortConfig.direction === 'ascending' ? '↑' : '↓' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sortData('roi'),\n            children: [\"ROI (%) \", sortConfig.key === 'roi' ? sortConfig.direction === 'ascending' ? '↑' : '↓' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sortData(isWeekly ? 'weekStart' : 'date'),\n            children: [isWeekly ? 'Week Starting' : 'Date', \" \", sortConfig.key === (isWeekly ? 'weekStart' : 'date') ? sortConfig.direction === 'ascending' ? '↑' : '↓' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), tabNames.map((tab, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sortData(tab),\n            children: [tab, \" \", sortConfig.key === tab ? sortConfig.direction === 'ascending' ? '↑' : '↓' : '']\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sortData('Total'),\n            children: [\"Total \", sortConfig.key === 'Total' ? sortConfig.direction === 'ascending' ? '↑' : '↓' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: data.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: isIncome ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: isWeekly ? row.weekStart : row.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: row.income > 0 ? 'positive' : row.income < 0 ? 'negative' : '',\n            children: formatNumber(Math.round(row.income))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : isAllSummary ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.tabName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: row.totalPL > 0 ? 'positive' : row.totalPL < 0 ? 'negative' : '',\n            children: formatNumber(Math.round(row.totalPL))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatNumber(Math.round(row.totalTurnover))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: row.roi > 0 ? 'positive' : row.roi < 0 ? 'negative' : '',\n            children: [row.roi.toFixed(2), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: isWeekly ? row.weekStart : row.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 17\n          }, this), tabNames.map((tab, cellIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: row[tab] > 0 ? 'positive' : row[tab] < 0 ? 'negative' : '',\n            children: row[tab] !== undefined ? formatNumber(Math.round(row[tab])) : '-'\n          }, cellIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: row.Total > 0 ? 'positive' : row.Total < 0 ? 'negative' : '',\n            children: formatNumber(Math.round(row.Total))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Performance Summary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setView('daily'),\n        children: \"Daily Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setView('weekly'),\n        children: \"Weekly Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setView('all'),\n        children: \"All Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setView('dailyIncome'),\n        children: \"Daily Pachira Income\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setView('weeklyIncome'),\n        children: \"Weekly Pachira Income\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), view === 'daily' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Daily Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this), renderTable(summaryData, false, false, false)]\n    }, void 0, true) : view === 'weekly' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Weekly Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this), renderTable(weeklySummaryData, true, false, false)]\n    }, void 0, true) : view === 'all' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"All Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this), renderTable(allSummaryData, false, true, false)]\n    }, void 0, true) : view === 'dailyIncome' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Daily Pachira Income\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }, this), renderTable(dailyPachiraIncome, false, false, true)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Weekly Pachira Income\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }, this), renderTable(weeklyPachiraIncome, true, false, true)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleSheetData, \"9Ve8HiMop5Gc1LnCVLN172j7vmw=\");\n_c = GoogleSheetData;\nexport default GoogleSheetData;\nvar _c;\n$RefreshReg$(_c, \"GoogleSheetData\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","GoogleSheetData","_s","summaryData","setSummaryData","weeklySummaryData","setWeeklySummaryData","allSummaryData","setAllSummaryData","dailyPachiraIncome","setDailyPachiraIncome","weeklyPachiraIncome","setWeeklyPachiraIncome","loading","setLoading","error","setError","sortConfig","setSortConfig","key","direction","view","setView","sheetId","apiKey","tabNames","incomeTabs","plColumnIndex","turnoverColumnIndex","incomeColumnIndex","formatNumber","num","isNaN","toLocaleString","calculateDailyPachiraIncome","data","dailyIncome","forEach","row","date","income","tab","follow","Object","values","calculateWeeklyPachiraIncome","weeklyIncome","dateObj","Date","split","reverse","join","weekStart","setDate","getDate","getDay","weekKey","toISOString","fetchAllData","tabDataPromises","map","apiUrl","console","log","get","then","response","tabName","catch","tabDataResults","Promise","all","summary","message","tabData","slice","length","warn","rowIndex","_row$incomeColumnInde","parseFloat","replace","trim","summaryArray","sortData","dataToSort","sortedData","sort","a","b","aValue","undefined","bValue","children","fileName","_jsxFileName","lineNumber","columnNumber","renderTable","isWeekly","isAllSummary","isIncome","border","onClick","index","className","Math","round","totalPL","totalTurnover","roi","toFixed","cellIndex","Total","_c","$RefreshReg$"],"sources":["C:/Users/CMW1/Downloads/pachira-financials/src/components/GoogleSheetData.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\r\nimport axios from 'axios';\r\nimport './GoogleSheetData.css'; // Import CSS for conditional formatting\r\n\r\nconst GoogleSheetData = () => {\r\n  const [summaryData, setSummaryData] = useState([]);\r\n  const [weeklySummaryData, setWeeklySummaryData] = useState([]);\r\n  const [allSummaryData, setAllSummaryData] = useState([]);\r\n  const [dailyPachiraIncome, setDailyPachiraIncome] = useState([]);\r\n  const [weeklyPachiraIncome, setWeeklyPachiraIncome] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [sortConfig, setSortConfig] = useState({ key: 'date', direction: 'ascending' });\r\n  const [view, setView] = useState('daily'); // Track current view (daily, weekly, all, dailyIncome, weeklyIncome)\r\n\r\n  const sheetId = '1D2B33Uj1vS_weRZQAQdMRcaQbk1KG1SAjNfoaHAKrSo'; // Your Google Sheet ID\r\n  const apiKey = 'AIzaSyBAPhvHyE-PbFUktWwlt-2_KJfwQTabEvQ'; // Your API Key\r\n\r\n  // Memoize the tabNames array to prevent re-creation on each render\r\n  const tabNames = useMemo(() => ['S1x', 'S2x', 'S3PM', 'S3IR', 'follow', 'Tennis', 'MLB', 'American Football'], []);\r\n  const incomeTabs = useMemo(() => ['Tennis', 'MLB', 'American Football'], []);\r\n\r\n  const plColumnIndex = 8; // Index for the P/L column (Column I for 'follow' tab)\r\n  const turnoverColumnIndex = 5; // Index for the Turnover column (Column F)\r\n  const incomeColumnIndex = 10; // Index for the Income column (Column K)\r\n\r\n  // Function to format numbers with commas\r\n  const formatNumber = (num) => {\r\n    if (num !== null && !isNaN(num)) {\r\n      return num.toLocaleString(); // Adds commas to the number\r\n    }\r\n    return '-';\r\n  };\r\n\r\n  // Function to calculate daily Pachira Income\r\n  const calculateDailyPachiraIncome = useCallback((data) => {\r\n    const dailyIncome = {};\r\n\r\n    data.forEach((row) => {\r\n      const date = row.date;\r\n      if (!dailyIncome[date]) {\r\n        dailyIncome[date] = { date, income: 0 };\r\n      }\r\n      incomeTabs.forEach((tab) => {\r\n        dailyIncome[date].income += row[`income_${tab}`] || 0;\r\n      });\r\n      dailyIncome[date].income += row.follow || 0;\r\n    });\r\n\r\n    setDailyPachiraIncome(Object.values(dailyIncome));\r\n  }, [incomeTabs]);\r\n\r\n  // Function to calculate weekly Pachira Income\r\n  const calculateWeeklyPachiraIncome = useCallback((data) => {\r\n    const weeklyIncome = {};\r\n\r\n    data.forEach((row) => {\r\n      const dateObj = new Date(row.date.split('/').reverse().join('-'));\r\n      const weekStart = new Date(dateObj.setDate(dateObj.getDate() - dateObj.getDay() + 1)); // Get Monday of the week\r\n      const weekKey = weekStart.toISOString().split('T')[0]; // Use ISO string as key for grouping\r\n\r\n      if (!weeklyIncome[weekKey]) {\r\n        weeklyIncome[weekKey] = { weekStart: weekKey, income: 0 };\r\n      }\r\n\r\n      incomeTabs.forEach((tab) => {\r\n        weeklyIncome[weekKey].income += row[`income_${tab}`] || 0;\r\n      });\r\n      weeklyIncome[weekKey].income += row.follow || 0;\r\n    });\r\n\r\n    setWeeklyPachiraIncome(Object.values(weeklyIncome));\r\n  }, [incomeTabs]);\r\n\r\n  useEffect(() => {\r\n    const fetchAllData = async () => {\r\n      try {\r\n        // Fetch data from all tabs\r\n        const tabDataPromises = tabNames.map((tab) => {\r\n          const apiUrl = `https://sheets.googleapis.com/v4/spreadsheets/${sheetId}/values/${tab}?key=${apiKey}`;\r\n          console.log(`Fetching data for ${tab} from URL: ${apiUrl}`);\r\n          return axios.get(apiUrl)\r\n            .then(response => ({ tabName: tab, data: response.data }))\r\n            .catch(error => {\r\n              console.error(`Error fetching data for ${tab}:`, error);\r\n              return { tabName: tab, data: null, error };\r\n            });\r\n        });\r\n\r\n        // Wait for all promises to resolve\r\n        const tabDataResults = await Promise.all(tabDataPromises);\r\n\r\n        // Combine all data into a summary object\r\n        const summary = {};\r\n\r\n        tabDataResults.forEach(({ tabName, data, error }) => {\r\n          if (data === null) {\r\n            console.error(`No data received for ${tabName}. Error:`, error?.response ? error.response.data : error.message);\r\n            return;\r\n          }\r\n\r\n          const tabData = data.values || [];\r\n\r\n          // Debugging: Log the first few rows to check structure\r\n          console.log(`Data for ${tabName}:`, tabData.slice(0, 5));\r\n\r\n          // Check if there is data in the tab\r\n          if (tabData.length < 2) {\r\n            console.warn(`No data found in tab ${tabName}`);\r\n          } else {\r\n            console.log(`Total rows in ${tabName}:`, tabData.length);\r\n          }\r\n\r\n          // Skip the header row and process each row\r\n          tabData.slice(1).forEach((row, rowIndex) => {\r\n            const date = row[0]; // Date column\r\n\r\n            // Check if P/L or Income column exists and has a valid number\r\n            const income = tabName === 'follow' ? parseFloat(row[plColumnIndex].replace(/,/g, '').trim()) : parseFloat(row[incomeColumnIndex]?.replace(/,/g, '').trim());\r\n\r\n            if (!isNaN(income)) {\r\n              if (!summary[date]) {\r\n                summary[date] = { date };\r\n              }\r\n              summary[date][`income_${tabName}`] = (summary[date][`income_${tabName}`] || 0) + income;\r\n\r\n              // Debugging: Log each row processing\r\n              console.log(`Processing row ${rowIndex + 1} for ${tabName} on ${date}:`, row, `Parsed Income: ${income}`);\r\n            } else {\r\n              console.warn(`Invalid Income value at row ${rowIndex + 1} for ${tabName} on ${date}`);\r\n            }\r\n          });\r\n        });\r\n\r\n        // Convert summary object to array and calculate daily/weekly Pachira income\r\n        const summaryArray = Object.values(summary);\r\n        calculateDailyPachiraIncome(summaryArray);\r\n        calculateWeeklyPachiraIncome(summaryArray);\r\n      } catch (error) {\r\n        setError('Error fetching data');\r\n        console.error('Error fetching data:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAllData();\r\n  }, [apiKey, sheetId, tabNames, calculateDailyPachiraIncome, calculateWeeklyPachiraIncome]); // Added missing dependencies\r\n\r\n  const sortData = (key) => {\r\n    let direction = 'ascending';\r\n    if (sortConfig.key === key && sortConfig.direction === 'ascending') {\r\n      direction = 'descending';\r\n    }\r\n\r\n    const dataToSort = view === 'daily' ? summaryData : view === 'weekly' ? weeklySummaryData : view === 'all' ? allSummaryData : view === 'dailyIncome' ? dailyPachiraIncome : weeklyPachiraIncome;\r\n\r\n    const sortedData = [...dataToSort].sort((a, b) => {\r\n      if (key === 'date' || key === 'weekStart') {\r\n        // For date or weekStart, convert to Date object and compare\r\n        return direction === 'ascending'\r\n          ? new Date(a[key].split('/').reverse().join('-')) - new Date(b[key].split('/').reverse().join('-'))\r\n          : new Date(b[key].split('/').reverse().join('-')) - new Date(a[key].split('/').reverse().join('-'));\r\n      } else {\r\n        // For other columns, compare numerical values\r\n        const aValue = a[key] !== undefined ? a[key] : 0;\r\n        const bValue = b[key] !== undefined ? b[key] : 0;\r\n        return direction === 'ascending' ? aValue - bValue : bValue - aValue;\r\n      }\r\n    });\r\n\r\n    if (view === 'daily') {\r\n      setSummaryData(sortedData);\r\n    } else if (view === 'weekly') {\r\n      setWeeklySummaryData(sortedData);\r\n    } else if (view === 'all') {\r\n      setAllSummaryData(sortedData);\r\n        } else if (view === 'dailyIncome') {\r\n      setDailyPachiraIncome(sortedData);\r\n    } else if (view === 'weeklyIncome') {\r\n      setWeeklyPachiraIncome(sortedData);\r\n    }\r\n\r\n    setSortConfig({ key, direction });\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  // Function to render different tables based on view type\r\n  const renderTable = (data, isWeekly, isAllSummary, isIncome) => (\r\n    <table border=\"1\">\r\n      <thead>\r\n        <tr>\r\n          {isIncome ? (\r\n            <>\r\n              <th onClick={() => sortData(isWeekly ? 'weekStart' : 'date')}>\r\n                {isWeekly ? 'Week Starting' : 'Date'} {sortConfig.key === (isWeekly ? 'weekStart' : 'date') ? (sortConfig.direction === 'ascending' ? '↑' : '↓') : ''}\r\n              </th>\r\n              <th onClick={() => sortData('income')}>\r\n                Income {sortConfig.key === 'income' ? (sortConfig.direction === 'ascending' ? '↑' : '↓') : ''}\r\n              </th>\r\n            </>\r\n          ) : isAllSummary ? (\r\n            <>\r\n              <th onClick={() => sortData('tabName')}>\r\n                Tab {sortConfig.key === 'tabName' ? (sortConfig.direction === 'ascending' ? '↑' : '↓') : ''}\r\n              </th>\r\n              <th onClick={() => sortData('totalPL')}>\r\n                Total P/L {sortConfig.key === 'totalPL' ? (sortConfig.direction === 'ascending' ? '↑' : '↓') : ''}\r\n              </th>\r\n              <th onClick={() => sortData('totalTurnover')}>\r\n                Total Turnover {sortConfig.key === 'totalTurnover' ? (sortConfig.direction === 'ascending' ? '↑' : '↓') : ''}\r\n              </th>\r\n              <th onClick={() => sortData('roi')}>\r\n                ROI (%) {sortConfig.key === 'roi' ? (sortConfig.direction === 'ascending' ? '↑' : '↓') : ''}\r\n              </th>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <th onClick={() => sortData(isWeekly ? 'weekStart' : 'date')}>\r\n                {isWeekly ? 'Week Starting' : 'Date'} {sortConfig.key === (isWeekly ? 'weekStart' : 'date') ? (sortConfig.direction === 'ascending' ? '↑' : '↓') : ''}\r\n              </th>\r\n              {tabNames.map((tab, index) => (\r\n                <th key={index} onClick={() => sortData(tab)}>\r\n                  {tab} {sortConfig.key === tab ? (sortConfig.direction === 'ascending' ? '↑' : '↓') : ''}\r\n                </th>\r\n              ))}\r\n              <th onClick={() => sortData('Total')}>\r\n                Total {sortConfig.key === 'Total' ? (sortConfig.direction === 'ascending' ? '↑' : '↓') : ''}\r\n              </th>\r\n            </>\r\n          )}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {data.map((row, rowIndex) => (\r\n          <tr key={rowIndex}>\r\n            {isIncome ? (\r\n              <>\r\n                <td>{isWeekly ? row.weekStart : row.date}</td>\r\n                <td className={row.income > 0 ? 'positive' : row.income < 0 ? 'negative' : ''}>\r\n                  {formatNumber(Math.round(row.income))}\r\n                </td>\r\n              </>\r\n            ) : isAllSummary ? (\r\n              <>\r\n                <td>{row.tabName}</td>\r\n                <td className={row.totalPL > 0 ? 'positive' : row.totalPL < 0 ? 'negative' : ''}>\r\n                  {formatNumber(Math.round(row.totalPL))}\r\n                </td>\r\n                <td>{formatNumber(Math.round(row.totalTurnover))}</td>\r\n                <td className={row.roi > 0 ? 'positive' : row.roi < 0 ? 'negative' : ''}>\r\n                  {row.roi.toFixed(2)}%\r\n                </td>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <td>{isWeekly ? row.weekStart : row.date}</td>\r\n                {tabNames.map((tab, cellIndex) => (\r\n                  <td\r\n                    key={cellIndex}\r\n                    className={row[tab] > 0 ? 'positive' : row[tab] < 0 ? 'negative' : ''}\r\n                  >\r\n                    {row[tab] !== undefined ? formatNumber(Math.round(row[tab])) : '-'}\r\n                  </td>\r\n                ))}\r\n                <td className={row.Total > 0 ? 'positive' : row.Total < 0 ? 'negative' : ''}>\r\n                  {formatNumber(Math.round(row.Total))}\r\n                </td>\r\n              </>\r\n            )}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h1>Performance Summary</h1>\r\n      <div>\r\n        <button onClick={() => setView('daily')}>Daily Summary</button>\r\n        <button onClick={() => setView('weekly')}>Weekly Summary</button>\r\n        <button onClick={() => setView('all')}>All Summary</button>\r\n        <button onClick={() => setView('dailyIncome')}>Daily Pachira Income</button>\r\n        <button onClick={() => setView('weeklyIncome')}>Weekly Pachira Income</button>\r\n      </div>\r\n      {view === 'daily' ? (\r\n        <>\r\n          <h2>Daily Summary</h2>\r\n          {renderTable(summaryData, false, false, false)}\r\n        </>\r\n      ) : view === 'weekly' ? (\r\n        <>\r\n          <h2>Weekly Summary</h2>\r\n          {renderTable(weeklySummaryData, true, false, false)}\r\n        </>\r\n      ) : view === 'all' ? (\r\n        <>\r\n          <h2>All Summary</h2>\r\n          {renderTable(allSummaryData, false, true, false)}\r\n        </>\r\n      ) : view === 'dailyIncome' ? (\r\n        <>\r\n          <h2>Daily Pachira Income</h2>\r\n          {renderTable(dailyPachiraIncome, false, false, true)}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h2>Weekly Pachira Income</h2>\r\n          {renderTable(weeklyPachiraIncome, true, false, true)}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleSheetData;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}