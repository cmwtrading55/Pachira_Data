{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CMW1\\\\Downloads\\\\pachira-financials\\\\src\\\\components\\\\GoogleSheetData.js\",\n  _s = $RefreshSig$();\n// src/components/GoogleSheetData.js\nimport React, { useState, useEffect, useMemo } from 'react';\nimport SummaryTable from './SummaryTable';\nimport { fetchDataFromSheet } from '../utils/DataFetcher';\nimport { calculateWeeklySummary, calculateAllSummary } from '../utils/Calculations';\nimport './GoogleSheetData.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GoogleSheetData = () => {\n  _s();\n  const [summaryData, setSummaryData] = useState([]);\n  const [weeklySummaryData, setWeeklySummaryData] = useState([]);\n  const [allSummaryData, setAllSummaryData] = useState([]);\n  const [dailyPachiraData, setDailyPachiraData] = useState([]);\n  const [weeklyPachiraData, setWeeklyPachiraData] = useState([]);\n  const [monthlySummaryData, setMonthlySummaryData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [sortConfig, setSortConfig] = useState({\n    key: 'date',\n    direction: 'ascending'\n  });\n  const [view, setView] = useState('daily');\n  const sheetId = '1D2B33Uj1vS_weRZQAQdMRcaQbk1KG1SAjNfoaHAKrSo'; // Your Google Sheet ID\n  const apiKey = 'AIzaSyCPXl_3elTDd4_gs-xpPmm4laVoO3P4RPA'; // Your API Key\n\n  const tabNames = useMemo(() => ['S1x', 'S2x', 'S3PM', 'S3IR', 'Tennis', 'MLB', 'American Football', 'Baseball'], []);\n  const pachiraTabNames = useMemo(() => ['follow', 'Tennis', 'MLB', 'American Football'], []);\n\n  // Function to calculate the monthly summary, excluding the \"follow\" tab\n  const calculateMonthlySummary = tabDataResults => {\n    const monthlySummary = {};\n\n    // Loop through each tab data result\n    tabDataResults.forEach(({\n      tabName,\n      data\n    }) => {\n      // Exclude the \"follow\" tab in monthly calculations\n      if (tabName !== 'follow') {\n        const tabData = (data === null || data === void 0 ? void 0 : data.values) || [];\n        tabData.slice(1).forEach(row => {\n          var _row$turnoverColumnIn;\n          const date = row[0];\n          const monthYear = new Date(date).toLocaleString('en-US', {\n            month: 'long',\n            year: 'numeric'\n          });\n\n          // Turnover column index varies based on the tab\n          const turnoverColumnIndex = ['Tennis'].includes(tabName) ? 4 : 5;\n          const turnoverRaw = (_row$turnoverColumnIn = row[turnoverColumnIndex]) === null || _row$turnoverColumnIn === void 0 ? void 0 : _row$turnoverColumnIn.replace(/,/g, '').trim();\n          const turnover = parseFloat(turnoverRaw);\n          if (!isNaN(turnover)) {\n            if (!monthlySummary[monthYear]) {\n              monthlySummary[monthYear] = 0;\n            }\n            monthlySummary[monthYear] += turnover * 2;\n          }\n        });\n      }\n    });\n    return Object.entries(monthlySummary).map(([monthYear, total]) => ({\n      monthYear,\n      total\n    }));\n  };\n  useEffect(() => {\n    const fetchAllData = async () => {\n      try {\n        console.log('Fetching data from Google Sheets...');\n        const tabDataResults = await fetchDataFromSheet(sheetId, apiKey, tabNames);\n        if (!tabDataResults || tabDataResults.length === 0) {\n          throw new Error('No data returned from the sheet.');\n        }\n        console.log('Data successfully fetched:', tabDataResults); // Debug: log fetched data\n\n        const summary = {};\n        const dailyPachiraSummary = {};\n        tabDataResults.forEach(({\n          tabName,\n          data\n        }) => {\n          if (!data) {\n            console.error(`No data received for ${tabName}`);\n            return;\n          }\n          const tabData = data.values || [];\n          tabData.slice(1).forEach(row => {\n            var _row$incomeColumnInde, _row$turnoverColumnIn2;\n            const date = row[0];\n            const incomeColumnIndex = ['Tennis', 'MLB', 'American Football'].includes(tabName) ? 10 : 8;\n            const turnoverColumnIndex = tabName === 'Tennis' ? 4 : 5;\n            const incomeRaw = (_row$incomeColumnInde = row[incomeColumnIndex]) === null || _row$incomeColumnInde === void 0 ? void 0 : _row$incomeColumnInde.replace(/,/g, '').trim();\n            const turnoverRaw = (_row$turnoverColumnIn2 = row[turnoverColumnIndex]) === null || _row$turnoverColumnIn2 === void 0 ? void 0 : _row$turnoverColumnIn2.replace(/,/g, '').trim();\n            const income = parseFloat(incomeRaw);\n            const turnover = parseFloat(turnoverRaw);\n            if (!isNaN(income) && !isNaN(turnover)) {\n              if (!summary[date]) {\n                summary[date] = {\n                  date,\n                  TotalTurnover: 0,\n                  Total: 0\n                };\n              }\n              summary[date][tabName] = (summary[date][tabName] || 0) + income;\n              summary[date][`turnover_${tabName}`] = (summary[date][`turnover_${tabName}`] || 0) + turnover;\n              summary[date].TotalTurnover += turnover;\n              summary[date].Total += income;\n              if (pachiraTabNames.includes(tabName)) {\n                if (!dailyPachiraSummary[date]) {\n                  dailyPachiraSummary[date] = {\n                    date,\n                    Total: 0\n                  };\n                }\n                dailyPachiraSummary[date][tabName] = (dailyPachiraSummary[date][tabName] || 0) + income;\n                dailyPachiraSummary[date].Total += income;\n              }\n            }\n          });\n        });\n        const summaryArray = Object.values(summary);\n        const dailyPachiraArray = Object.values(dailyPachiraSummary);\n        const monthlySummaryArray = calculateMonthlySummary(tabDataResults); // Monthly summary calculation\n\n        const weeklyPachiraArray = calculateWeeklySummary(dailyPachiraArray, pachiraTabNames);\n        setSummaryData(summaryArray);\n        setWeeklySummaryData(calculateWeeklySummary(summaryArray, tabNames));\n        setAllSummaryData(calculateAllSummary(summaryArray, tabNames));\n        setDailyPachiraData(dailyPachiraArray);\n        setWeeklyPachiraData(weeklyPachiraArray);\n        setMonthlySummaryData(monthlySummaryArray); // Set the monthly summary data\n      } catch (error) {\n        setError(`Error fetching data: ${error.message}`);\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAllData();\n  }, [apiKey, sheetId, tabNames, pachiraTabNames]);\n  const sortData = key => {\n    let direction = 'ascending';\n    if (sortConfig.key === key && sortConfig.direction === 'ascending') {\n      direction = 'descending';\n    }\n    const dataToSort = view === 'daily' ? summaryData : view === 'weekly' ? weeklySummaryData : view === 'all' ? allSummaryData : view === 'dailyPachira' ? dailyPachiraData : view === 'weeklyPachira' ? weeklyPachiraData : view === 'monthly' ? monthlySummaryData : []; // Sorting for monthly summary\n\n    const sortedData = [...dataToSort].sort((a, b) => {\n      if (key === 'monthYear' || key === 'date' || key === 'weekStart') {\n        return direction === 'ascending' ? new Date(a[key].split('/').reverse().join('-')) - new Date(b[key].split('/').reverse().join('-')) : new Date(b[key].split('/').reverse().join('-')) - new Date(a[key].split('/').reverse().join('-'));\n      } else {\n        const aValue = a[key] !== undefined ? a[key] : 0;\n        const bValue = b[key] !== undefined ? b[key] : 0;\n        return direction === 'ascending' ? aValue - bValue : bValue - aValue;\n      }\n    });\n    if (view === 'daily') setSummaryData(sortedData);else if (view === 'weekly') setWeeklySummaryData(sortedData);else if (view === 'all') setAllSummaryData(sortedData);else if (view === 'dailyPachira') setDailyPachiraData(sortedData);else if (view === 'weeklyPachira') setWeeklyPachiraData(sortedData);else if (view === 'monthly') setMonthlySummaryData(sortedData); // Apply sorting for monthly summary\n\n    setSortConfig({\n      key,\n      direction\n    });\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Performance Summary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setView('daily'),\n        children: \"Daily Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setView('weekly'),\n        children: \"Weekly Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setView('all'),\n        children: \"All Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setView('dailyPachira'),\n        children: \"Daily Pachira Income\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setView('weeklyPachira'),\n        children: \"Weekly Pachira Income\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setView('monthly'),\n        children: \"Monthly Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), view === 'daily' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Daily Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SummaryTable, {\n        data: summaryData,\n        sortConfig: sortConfig,\n        sortData: sortData,\n        tabNames: tabNames,\n        isWeekly: false,\n        isAllSummary: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : view === 'weekly' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Weekly Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SummaryTable, {\n        data: weeklySummaryData,\n        sortConfig: sortConfig,\n        sortData: sortData,\n        tabNames: tabNames,\n        isWeekly: true,\n        isAllSummary: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : view === 'all' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"All Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SummaryTable, {\n        data: allSummaryData,\n        sortConfig: sortConfig,\n        sortData: sortData,\n        tabNames: tabNames,\n        isWeekly: false,\n        isAllSummary: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : view === 'dailyPachira' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Daily Pachira Income\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SummaryTable, {\n        data: dailyPachiraData,\n        sortConfig: sortConfig,\n        sortData: sortData,\n        tabNames: pachiraTabNames,\n        isWeekly: false,\n        isAllSummary: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : view === 'weeklyPachira' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Weekly Pachira Income\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SummaryTable, {\n        data: weeklyPachiraData,\n        sortConfig: sortConfig,\n        sortData: sortData,\n        tabNames: pachiraTabNames,\n        isWeekly: true,\n        isAllSummary: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : view === 'monthly' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Monthly Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SummaryTable, {\n        data: monthlySummaryData,\n        sortConfig: sortConfig,\n        sortData: sortData,\n        tabNames: tabNames.filter(tab => tab !== 'follow') // Exclude \"follow\" tab for Monthly Summary\n        ,\n        isWeekly: false,\n        isAllSummary: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleSheetData, \"SRBPAO731Tpr2ieXfWdvbSoooWs=\");\n_c = GoogleSheetData;\nexport default GoogleSheetData;\nvar _c;\n$RefreshReg$(_c, \"GoogleSheetData\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","SummaryTable","fetchDataFromSheet","calculateWeeklySummary","calculateAllSummary","jsxDEV","_jsxDEV","Fragment","_Fragment","GoogleSheetData","_s","summaryData","setSummaryData","weeklySummaryData","setWeeklySummaryData","allSummaryData","setAllSummaryData","dailyPachiraData","setDailyPachiraData","weeklyPachiraData","setWeeklyPachiraData","monthlySummaryData","setMonthlySummaryData","loading","setLoading","error","setError","sortConfig","setSortConfig","key","direction","view","setView","sheetId","apiKey","tabNames","pachiraTabNames","calculateMonthlySummary","tabDataResults","monthlySummary","forEach","tabName","data","tabData","values","slice","row","_row$turnoverColumnIn","date","monthYear","Date","toLocaleString","month","year","turnoverColumnIndex","includes","turnoverRaw","replace","trim","turnover","parseFloat","isNaN","Object","entries","map","total","fetchAllData","console","log","length","Error","summary","dailyPachiraSummary","_row$incomeColumnInde","_row$turnoverColumnIn2","incomeColumnIndex","incomeRaw","income","TotalTurnover","Total","summaryArray","dailyPachiraArray","monthlySummaryArray","weeklyPachiraArray","message","sortData","dataToSort","sortedData","sort","a","b","split","reverse","join","aValue","undefined","bValue","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isWeekly","isAllSummary","filter","tab","_c","$RefreshReg$"],"sources":["C:/Users/CMW1/Downloads/pachira-financials/src/components/GoogleSheetData.js"],"sourcesContent":["// src/components/GoogleSheetData.js\r\nimport React, { useState, useEffect, useMemo } from 'react';\r\nimport SummaryTable from './SummaryTable';\r\nimport { fetchDataFromSheet } from '../utils/DataFetcher';\r\nimport { calculateWeeklySummary, calculateAllSummary } from '../utils/Calculations';\r\nimport './GoogleSheetData.css';\r\n\r\nconst GoogleSheetData = () => {\r\n  const [summaryData, setSummaryData] = useState([]);\r\n  const [weeklySummaryData, setWeeklySummaryData] = useState([]);\r\n  const [allSummaryData, setAllSummaryData] = useState([]);\r\n  const [dailyPachiraData, setDailyPachiraData] = useState([]);\r\n  const [weeklyPachiraData, setWeeklyPachiraData] = useState([]);\r\n  const [monthlySummaryData, setMonthlySummaryData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [sortConfig, setSortConfig] = useState({ key: 'date', direction: 'ascending' });\r\n  const [view, setView] = useState('daily');\r\n\r\n  const sheetId = '1D2B33Uj1vS_weRZQAQdMRcaQbk1KG1SAjNfoaHAKrSo'; // Your Google Sheet ID\r\n  const apiKey = 'AIzaSyCPXl_3elTDd4_gs-xpPmm4laVoO3P4RPA'; // Your API Key\r\n\r\n  const tabNames = useMemo(() => ['S1x', 'S2x', 'S3PM', 'S3IR', 'Tennis', 'MLB', 'American Football', 'Baseball'], []);\r\n  const pachiraTabNames = useMemo(() => ['follow', 'Tennis', 'MLB', 'American Football'], []);\r\n\r\n  // Function to calculate the monthly summary, excluding the \"follow\" tab\r\n  const calculateMonthlySummary = (tabDataResults) => {\r\n    const monthlySummary = {};\r\n\r\n    // Loop through each tab data result\r\n    tabDataResults.forEach(({ tabName, data }) => {\r\n      // Exclude the \"follow\" tab in monthly calculations\r\n      if (tabName !== 'follow') {\r\n        const tabData = data?.values || [];\r\n        tabData.slice(1).forEach((row) => {\r\n          const date = row[0];\r\n          const monthYear = new Date(date).toLocaleString('en-US', { month: 'long', year: 'numeric' });\r\n\r\n          // Turnover column index varies based on the tab\r\n          const turnoverColumnIndex = ['Tennis'].includes(tabName) ? 4 : 5;\r\n          const turnoverRaw = row[turnoverColumnIndex]?.replace(/,/g, '').trim();\r\n          const turnover = parseFloat(turnoverRaw);\r\n\r\n          if (!isNaN(turnover)) {\r\n            if (!monthlySummary[monthYear]) {\r\n              monthlySummary[monthYear] = 0;\r\n            }\r\n            monthlySummary[monthYear] += turnover * 2;\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    return Object.entries(monthlySummary).map(([monthYear, total]) => ({\r\n      monthYear,\r\n      total,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchAllData = async () => {\r\n      try {\r\n        console.log('Fetching data from Google Sheets...');\r\n        const tabDataResults = await fetchDataFromSheet(sheetId, apiKey, tabNames);\r\n\r\n        if (!tabDataResults || tabDataResults.length === 0) {\r\n          throw new Error('No data returned from the sheet.');\r\n        }\r\n\r\n        console.log('Data successfully fetched:', tabDataResults); // Debug: log fetched data\r\n\r\n        const summary = {};\r\n        const dailyPachiraSummary = {};\r\n\r\n        tabDataResults.forEach(({ tabName, data }) => {\r\n          if (!data) {\r\n            console.error(`No data received for ${tabName}`);\r\n            return;\r\n          }\r\n\r\n          const tabData = data.values || [];\r\n          tabData.slice(1).forEach((row) => {\r\n            const date = row[0];\r\n            const incomeColumnIndex = ['Tennis', 'MLB', 'American Football'].includes(tabName) ? 10 : 8;\r\n            const turnoverColumnIndex = tabName === 'Tennis' ? 4 : 5;\r\n\r\n            const incomeRaw = row[incomeColumnIndex]?.replace(/,/g, '').trim();\r\n            const turnoverRaw = row[turnoverColumnIndex]?.replace(/,/g, '').trim();\r\n            const income = parseFloat(incomeRaw);\r\n            const turnover = parseFloat(turnoverRaw);\r\n\r\n            if (!isNaN(income) && !isNaN(turnover)) {\r\n              if (!summary[date]) {\r\n                summary[date] = { date, TotalTurnover: 0, Total: 0 };\r\n              }\r\n              summary[date][tabName] = (summary[date][tabName] || 0) + income;\r\n              summary[date][`turnover_${tabName}`] = (summary[date][`turnover_${tabName}`] || 0) + turnover;\r\n\r\n              summary[date].TotalTurnover += turnover;\r\n              summary[date].Total += income;\r\n\r\n              if (pachiraTabNames.includes(tabName)) {\r\n                if (!dailyPachiraSummary[date]) {\r\n                  dailyPachiraSummary[date] = { date, Total: 0 };\r\n                }\r\n                dailyPachiraSummary[date][tabName] = (dailyPachiraSummary[date][tabName] || 0) + income;\r\n                dailyPachiraSummary[date].Total += income;\r\n              }\r\n            }\r\n          });\r\n        });\r\n\r\n        const summaryArray = Object.values(summary);\r\n        const dailyPachiraArray = Object.values(dailyPachiraSummary);\r\n\r\n        const monthlySummaryArray = calculateMonthlySummary(tabDataResults); // Monthly summary calculation\r\n\r\n        const weeklyPachiraArray = calculateWeeklySummary(dailyPachiraArray, pachiraTabNames);\r\n\r\n        setSummaryData(summaryArray);\r\n        setWeeklySummaryData(calculateWeeklySummary(summaryArray, tabNames));\r\n        setAllSummaryData(calculateAllSummary(summaryArray, tabNames));\r\n        setDailyPachiraData(dailyPachiraArray);\r\n        setWeeklyPachiraData(weeklyPachiraArray);\r\n        setMonthlySummaryData(monthlySummaryArray); // Set the monthly summary data\r\n\r\n      } catch (error) {\r\n        setError(`Error fetching data: ${error.message}`);\r\n        console.error('Error fetching data:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAllData();\r\n  }, [apiKey, sheetId, tabNames, pachiraTabNames]);\r\n\r\n  const sortData = (key) => {\r\n    let direction = 'ascending';\r\n    if (sortConfig.key === key && sortConfig.direction === 'ascending') {\r\n      direction = 'descending';\r\n    }\r\n\r\n    const dataToSort =\r\n      view === 'daily' ? summaryData :\r\n      view === 'weekly' ? weeklySummaryData :\r\n      view === 'all' ? allSummaryData :\r\n      view === 'dailyPachira' ? dailyPachiraData :\r\n      view === 'weeklyPachira' ? weeklyPachiraData :\r\n      view === 'monthly' ? monthlySummaryData : []; // Sorting for monthly summary\r\n\r\n    const sortedData = [...dataToSort].sort((a, b) => {\r\n      if (key === 'monthYear' || key === 'date' || key === 'weekStart') {\r\n        return direction === 'ascending'\r\n          ? new Date(a[key].split('/').reverse().join('-')) - new Date(b[key].split('/').reverse().join('-'))\r\n          : new Date(b[key].split('/').reverse().join('-')) - new Date(a[key].split('/').reverse().join('-'));\r\n      } else {\r\n        const aValue = a[key] !== undefined ? a[key] : 0;\r\n        const bValue = b[key] !== undefined ? b[key] : 0;\r\n        return direction === 'ascending' ? aValue - bValue : bValue - aValue;\r\n      }\r\n    });\r\n\r\n    if (view === 'daily') setSummaryData(sortedData);\r\n    else if (view === 'weekly') setWeeklySummaryData(sortedData);\r\n    else if (view === 'all') setAllSummaryData(sortedData);\r\n    else if (view === 'dailyPachira') setDailyPachiraData(sortedData);\r\n    else if (view === 'weeklyPachira') setWeeklyPachiraData(sortedData);\r\n    else if (view === 'monthly') setMonthlySummaryData(sortedData); // Apply sorting for monthly summary\r\n\r\n    setSortConfig({ key, direction });\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Performance Summary</h1>\r\n      <div>\r\n                <button onClick={() => setView('daily')}>Daily Summary</button>\r\n        <button onClick={() => setView('weekly')}>Weekly Summary</button>\r\n        <button onClick={() => setView('all')}>All Summary</button>\r\n        <button onClick={() => setView('dailyPachira')}>Daily Pachira Income</button>\r\n        <button onClick={() => setView('weeklyPachira')}>Weekly Pachira Income</button>\r\n        <button onClick={() => setView('monthly')}>Monthly Summary</button> {/* New button for monthly summary */}\r\n      </div>\r\n      {view === 'daily' ? (\r\n        <>\r\n          <h2>Daily Summary</h2>\r\n          <SummaryTable\r\n            data={summaryData}\r\n            sortConfig={sortConfig}\r\n            sortData={sortData}\r\n            tabNames={tabNames}\r\n            isWeekly={false}\r\n            isAllSummary={false}\r\n          />\r\n        </>\r\n      ) : view === 'weekly' ? (\r\n        <>\r\n          <h2>Weekly Summary</h2>\r\n          <SummaryTable\r\n            data={weeklySummaryData}\r\n            sortConfig={sortConfig}\r\n            sortData={sortData}\r\n            tabNames={tabNames}\r\n            isWeekly={true}\r\n            isAllSummary={false}\r\n          />\r\n        </>\r\n      ) : view === 'all' ? (\r\n        <>\r\n          <h2>All Summary</h2>\r\n          <SummaryTable\r\n            data={allSummaryData}\r\n            sortConfig={sortConfig}\r\n            sortData={sortData}\r\n            tabNames={tabNames}\r\n            isWeekly={false}\r\n            isAllSummary={true}\r\n          />\r\n        </>\r\n      ) : view === 'dailyPachira' ? (\r\n        <>\r\n          <h2>Daily Pachira Income</h2>\r\n          <SummaryTable\r\n            data={dailyPachiraData}\r\n            sortConfig={sortConfig}\r\n            sortData={sortData}\r\n            tabNames={pachiraTabNames}\r\n            isWeekly={false}\r\n            isAllSummary={false}\r\n          />\r\n        </>\r\n      ) : view === 'weeklyPachira' ? (\r\n        <>\r\n          <h2>Weekly Pachira Income</h2>\r\n          <SummaryTable\r\n            data={weeklyPachiraData}\r\n            sortConfig={sortConfig}\r\n            sortData={sortData}\r\n            tabNames={pachiraTabNames}\r\n            isWeekly={true}\r\n            isAllSummary={false}\r\n          />\r\n        </>\r\n      ) : view === 'monthly' ? (\r\n        <>\r\n          <h2>Monthly Summary</h2>\r\n          <SummaryTable\r\n            data={monthlySummaryData}\r\n            sortConfig={sortConfig}\r\n            sortData={sortData}\r\n            tabNames={tabNames.filter(tab => tab !== 'follow')} // Exclude \"follow\" tab for Monthly Summary\r\n            isWeekly={false}\r\n            isAllSummary={false}\r\n          />\r\n        </>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleSheetData;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}