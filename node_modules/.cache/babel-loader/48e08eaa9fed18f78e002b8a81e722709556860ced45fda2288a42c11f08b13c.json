{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CMW1\\\\Downloads\\\\pachira-financials\\\\src\\\\components\\\\GoogleSheetData.js\",\n  _s = $RefreshSig$();\n// src/components/GoogleSheetData.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './GoogleSheetData.css'; // Import CSS for conditional formatting\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GoogleSheetData = () => {\n  _s();\n  const [summaryData, setSummaryData] = useState([]);\n  const [weeklySummaryData, setWeeklySummaryData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [sortConfig, setSortConfig] = useState({\n    key: 'date',\n    direction: 'ascending'\n  });\n  const [view, setView] = useState('daily'); // Track current view (daily or weekly)\n\n  const sheetId = '1D2B33Uj1vS_weRZQAQdMRcaQbk1KG1SAjNfoaHAKrSo'; // Your Google Sheet ID\n  const apiKey = 'AIzaSyBAPhvHyE-PbFUktWwlt-2_KJfwQTabEvQ'; // Your API Key\n  const tabNames = ['S1x', 'S2x', 'S3PM', 'S3IR', 'follow']; // Updated tab names\n  const plColumnIndex = 8; // Index for the P/L column (Column I)\n\n  useEffect(() => {\n    const fetchAllData = async () => {\n      try {\n        // Fetch data from all tabs\n        const tabDataPromises = tabNames.map(tab => {\n          const apiUrl = `https://sheets.googleapis.com/v4/spreadsheets/${sheetId}/values/${tab}?key=${apiKey}`;\n          console.log(`Fetching data for ${tab} from URL: ${apiUrl}`);\n          return axios.get(apiUrl).then(response => ({\n            tabName: tab,\n            data: response.data\n          })).catch(error => {\n            console.error(`Error fetching data for ${tab}:`, error);\n            return {\n              tabName: tab,\n              data: null\n            };\n          });\n        });\n\n        // Wait for all promises to resolve\n        const tabDataResults = await Promise.all(tabDataPromises);\n\n        // Combine all data into a summary object\n        const summary = {};\n        tabDataResults.forEach(({\n          tabName,\n          data\n        }) => {\n          if (data === null) {\n            console.error(`No data received for ${tabName}. Check if the tab exists or API request is correct.`);\n            return;\n          }\n          const tabData = data.values || [];\n\n          // Debugging: Log the first few rows to check structure\n          console.log(`Data for ${tabName}:`, tabData.slice(0, 5));\n\n          // Check if there is data in the tab\n          if (tabData.length < 2) {\n            console.warn(`No data found in tab ${tabName}`);\n          } else {\n            console.log(`Total rows in ${tabName}:`, tabData.length);\n          }\n\n          // Skip the header row and process each row\n          tabData.slice(1).forEach((row, rowIndex) => {\n            const date = row[0]; // Date column\n\n            // Check if P/L column exists and has a valid number\n            if (row[plColumnIndex] !== undefined) {\n              // Remove commas and parse the number\n              const plRaw = row[plColumnIndex].replace(/,/g, '').trim();\n              const pl = parseFloat(plRaw);\n              if (!isNaN(pl)) {\n                if (!summary[date]) {\n                  summary[date] = {\n                    date\n                  };\n                }\n                summary[date][tabName] = (summary[date][tabName] || 0) + pl;\n\n                // Debugging: Log each row processing\n                console.log(`Processing row ${rowIndex + 1} for ${tabName} on ${date}:`, row, `Parsed P/L: ${pl}`);\n              } else {\n                console.warn(`Invalid P/L value at row ${rowIndex + 1} for ${tabName} on ${date}:`, row[plColumnIndex]);\n              }\n            } else {\n              console.warn(`Missing P/L value at row ${rowIndex + 1} for ${tabName} on ${date}`);\n            }\n          });\n        });\n\n        // Convert summary object to array and calculate total\n        const summaryArray = Object.values(summary).map(entry => {\n          const total = tabNames.reduce((acc, tab) => acc + (entry[tab] || 0), 0);\n          return {\n            ...entry,\n            Total: total\n          };\n        });\n        setSummaryData(summaryArray);\n        calculateWeeklySummary(summaryArray); // Calculate weekly summary\n      } catch (error) {\n        setError('Error fetching data');\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAllData();\n  }, []);\n\n  // Calculate weekly summary from daily summary data\n  const calculateWeeklySummary = dailyData => {\n    const weeklySummary = {};\n    dailyData.forEach(row => {\n      const dateObj = new Date(row.date.split('/').reverse().join('-'));\n      const weekStart = new Date(dateObj.setDate(dateObj.getDate() - dateObj.getDay() + 1)); // Get Monday of the week\n      const weekKey = weekStart.toISOString().split('T')[0]; // Use ISO string as key for grouping\n\n      if (!weeklySummary[weekKey]) {\n        weeklySummary[weekKey] = {\n          weekStart: weekKey\n        };\n      }\n      tabNames.forEach(tab => {\n        weeklySummary[weekKey][tab] = (weeklySummary[weekKey][tab] || 0) + (row[tab] || 0);\n      });\n      weeklySummary[weekKey].Total = (weeklySummary[weekKey].Total || 0) + row.Total;\n    });\n    const weeklyArray = Object.values(weeklySummary);\n    setWeeklySummaryData(weeklyArray);\n  };\n  const sortData = key => {\n    let direction = 'ascending';\n    if (sortConfig.key === key && sortConfig.direction === 'ascending') {\n      direction = 'descending';\n    }\n    const dataToSort = view === 'daily' ? summaryData : weeklySummaryData;\n    const sortedData = [...dataToSort].sort((a, b) => {\n      if (key === 'date' || key === 'weekStart') {\n        // For date or weekStart, convert to Date object and compare\n        return direction === 'ascending' ? new Date(a[key].split('/').reverse().join('-')) - new Date(b[key].split('/').reverse().join('-')) : new Date(b[key].split('/').reverse().join('-')) - new Date(a[key].split('/').reverse().join('-'));\n      } else {\n        // For other columns, compare numerical values\n        const aValue = a[key] !== undefined ? a[key] : 0;\n        const bValue = b[key] !== undefined ? b[key] : 0;\n        return direction === 'ascending' ? aValue - bValue : bValue - aValue;\n      }\n    });\n    if (view === 'daily') {\n      setSummaryData(sortedData);\n    } else {\n      setWeeklySummaryData(sortedData);\n    }\n    setSortConfig({\n      key,\n      direction\n    });\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 21\n  }, this);\n  const renderTable = (data, isWeekly) => /*#__PURE__*/_jsxDEV(\"table\", {\n    border: \"1\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => sortData(isWeekly ? 'weekStart' : 'date'),\n          children: [isWeekly ? 'Week Starting' : 'Date', \" \", sortConfig.key === (isWeekly ? 'weekStart' : 'date') ? sortConfig.direction === 'ascending' ? '↑' : '↓' : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), tabNames.map((tab, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => sortData(tab),\n          children: [tab, \" \", sortConfig.key === tab ? sortConfig.direction === 'ascending' ? '↑' : '↓' : '']\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => sortData('Total'),\n          children: [\"Total \", sortConfig.key === 'Total' ? sortConfig.direction === 'ascending' ? '↑' : '↓' : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: data.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: isWeekly ? row.weekStart : row.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), tabNames.map((tab, cellIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n          className: row[tab] > 0 ? 'positive' : row[tab] < 0 ? 'negative' : '',\n          children: row[tab] !== undefined ? Math.round(row[tab]) : '-'\n        }, cellIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: row.Total > 0 ? 'positive' : row.Total < 0 ? 'negative' : '',\n          children: Math.round(row.Total)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)]\n      }, rowIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Performance Summary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setView('daily'),\n        children: \"Daily Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setView('weekly'),\n        children: \"Weekly Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), view === 'daily' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Daily Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this), renderTable(summaryData, false)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Weekly Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this), renderTable(weeklySummaryData, true)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleSheetData, \"wrvi9hgln8D+fkY2mFQDmecSpV4=\");\n_c = GoogleSheetData;\nexport default GoogleSheetData;\nvar _c;\n$RefreshReg$(_c, \"GoogleSheetData\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","GoogleSheetData","_s","summaryData","setSummaryData","weeklySummaryData","setWeeklySummaryData","loading","setLoading","error","setError","sortConfig","setSortConfig","key","direction","view","setView","sheetId","apiKey","tabNames","plColumnIndex","fetchAllData","tabDataPromises","map","tab","apiUrl","console","log","get","then","response","tabName","data","catch","tabDataResults","Promise","all","summary","forEach","tabData","values","slice","length","warn","row","rowIndex","date","undefined","plRaw","replace","trim","pl","parseFloat","isNaN","summaryArray","Object","entry","total","reduce","acc","Total","calculateWeeklySummary","dailyData","weeklySummary","dateObj","Date","split","reverse","join","weekStart","setDate","getDate","getDay","weekKey","toISOString","weeklyArray","sortData","dataToSort","sortedData","sort","a","b","aValue","bValue","children","fileName","_jsxFileName","lineNumber","columnNumber","renderTable","isWeekly","border","onClick","index","cellIndex","className","Math","round","_c","$RefreshReg$"],"sources":["C:/Users/CMW1/Downloads/pachira-financials/src/components/GoogleSheetData.js"],"sourcesContent":["// src/components/GoogleSheetData.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './GoogleSheetData.css'; // Import CSS for conditional formatting\r\n\r\nconst GoogleSheetData = () => {\r\n  const [summaryData, setSummaryData] = useState([]);\r\n  const [weeklySummaryData, setWeeklySummaryData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [sortConfig, setSortConfig] = useState({ key: 'date', direction: 'ascending' });\r\n  const [view, setView] = useState('daily'); // Track current view (daily or weekly)\r\n\r\n  const sheetId = '1D2B33Uj1vS_weRZQAQdMRcaQbk1KG1SAjNfoaHAKrSo'; // Your Google Sheet ID\r\n  const apiKey = 'AIzaSyBAPhvHyE-PbFUktWwlt-2_KJfwQTabEvQ'; // Your API Key\r\n  const tabNames = ['S1x', 'S2x', 'S3PM', 'S3IR', 'follow']; // Updated tab names\r\n  const plColumnIndex = 8; // Index for the P/L column (Column I)\r\n\r\n  useEffect(() => {\r\n    const fetchAllData = async () => {\r\n      try {\r\n        // Fetch data from all tabs\r\n        const tabDataPromises = tabNames.map((tab) => {\r\n          const apiUrl = `https://sheets.googleapis.com/v4/spreadsheets/${sheetId}/values/${tab}?key=${apiKey}`;\r\n          console.log(`Fetching data for ${tab} from URL: ${apiUrl}`);\r\n          return axios.get(apiUrl)\r\n            .then(response => ({ tabName: tab, data: response.data }))\r\n            .catch(error => {\r\n              console.error(`Error fetching data for ${tab}:`, error);\r\n              return { tabName: tab, data: null };\r\n            });\r\n        });\r\n\r\n        // Wait for all promises to resolve\r\n        const tabDataResults = await Promise.all(tabDataPromises);\r\n\r\n        // Combine all data into a summary object\r\n        const summary = {};\r\n\r\n        tabDataResults.forEach(({ tabName, data }) => {\r\n          if (data === null) {\r\n            console.error(`No data received for ${tabName}. Check if the tab exists or API request is correct.`);\r\n            return;\r\n          }\r\n\r\n          const tabData = data.values || [];\r\n\r\n          // Debugging: Log the first few rows to check structure\r\n          console.log(`Data for ${tabName}:`, tabData.slice(0, 5));\r\n\r\n          // Check if there is data in the tab\r\n          if (tabData.length < 2) {\r\n            console.warn(`No data found in tab ${tabName}`);\r\n          } else {\r\n            console.log(`Total rows in ${tabName}:`, tabData.length);\r\n          }\r\n\r\n          // Skip the header row and process each row\r\n          tabData.slice(1).forEach((row, rowIndex) => {\r\n            const date = row[0]; // Date column\r\n\r\n            // Check if P/L column exists and has a valid number\r\n            if (row[plColumnIndex] !== undefined) {\r\n              // Remove commas and parse the number\r\n              const plRaw = row[plColumnIndex].replace(/,/g, '').trim();\r\n              const pl = parseFloat(plRaw);\r\n\r\n              if (!isNaN(pl)) {\r\n                if (!summary[date]) {\r\n                  summary[date] = { date };\r\n                }\r\n                summary[date][tabName] = (summary[date][tabName] || 0) + pl;\r\n\r\n                // Debugging: Log each row processing\r\n                console.log(`Processing row ${rowIndex + 1} for ${tabName} on ${date}:`, row, `Parsed P/L: ${pl}`);\r\n              } else {\r\n                console.warn(`Invalid P/L value at row ${rowIndex + 1} for ${tabName} on ${date}:`, row[plColumnIndex]);\r\n              }\r\n            } else {\r\n              console.warn(`Missing P/L value at row ${rowIndex + 1} for ${tabName} on ${date}`);\r\n            }\r\n          });\r\n        });\r\n\r\n        // Convert summary object to array and calculate total\r\n        const summaryArray = Object.values(summary).map(entry => {\r\n          const total = tabNames.reduce((acc, tab) => acc + (entry[tab] || 0), 0);\r\n          return { ...entry, Total: total };\r\n        });\r\n\r\n        setSummaryData(summaryArray);\r\n        calculateWeeklySummary(summaryArray); // Calculate weekly summary\r\n      } catch (error) {\r\n        setError('Error fetching data');\r\n        console.error('Error fetching data:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAllData();\r\n  }, []);\r\n\r\n  // Calculate weekly summary from daily summary data\r\n  const calculateWeeklySummary = (dailyData) => {\r\n    const weeklySummary = {};\r\n\r\n    dailyData.forEach(row => {\r\n      const dateObj = new Date(row.date.split('/').reverse().join('-'));\r\n      const weekStart = new Date(dateObj.setDate(dateObj.getDate() - dateObj.getDay() + 1)); // Get Monday of the week\r\n      const weekKey = weekStart.toISOString().split('T')[0]; // Use ISO string as key for grouping\r\n\r\n      if (!weeklySummary[weekKey]) {\r\n        weeklySummary[weekKey] = { weekStart: weekKey };\r\n      }\r\n\r\n      tabNames.forEach(tab => {\r\n        weeklySummary[weekKey][tab] = (weeklySummary[weekKey][tab] || 0) + (row[tab] || 0);\r\n      });\r\n\r\n      weeklySummary[weekKey].Total = (weeklySummary[weekKey].Total || 0) + row.Total;\r\n    });\r\n\r\n    const weeklyArray = Object.values(weeklySummary);\r\n    setWeeklySummaryData(weeklyArray);\r\n  };\r\n\r\n  const sortData = (key) => {\r\n    let direction = 'ascending';\r\n    if (sortConfig.key === key && sortConfig.direction === 'ascending') {\r\n      direction = 'descending';\r\n    }\r\n\r\n    const dataToSort = view === 'daily' ? summaryData : weeklySummaryData;\r\n\r\n    const sortedData = [...dataToSort].sort((a, b) => {\r\n      if (key === 'date' || key === 'weekStart') {\r\n        // For date or weekStart, convert to Date object and compare\r\n        return direction === 'ascending'\r\n          ? new Date(a[key].split('/').reverse().join('-')) - new Date(b[key].split('/').reverse().join('-'))\r\n          : new Date(b[key].split('/').reverse().join('-')) - new Date(a[key].split('/').reverse().join('-'));\r\n      } else {\r\n        // For other columns, compare numerical values\r\n        const aValue = a[key] !== undefined ? a[key] : 0;\r\n        const bValue = b[key] !== undefined ? b[key] : 0;\r\n        return direction === 'ascending' ? aValue - bValue : bValue - aValue;\r\n      }\r\n    });\r\n\r\n    if (view === 'daily') {\r\n      setSummaryData(sortedData);\r\n    } else {\r\n      setWeeklySummaryData(sortedData);\r\n    }\r\n\r\n    setSortConfig({ key, direction });\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  const renderTable = (data, isWeekly) => (\r\n    <table border=\"1\">\r\n      <thead>\r\n        <tr>\r\n          <th onClick={() => sortData(isWeekly ? 'weekStart' : 'date')}>\r\n            {isWeekly ? 'Week Starting' : 'Date'} {sortConfig.key === (isWeekly ? 'weekStart' : 'date') ? (sortConfig.direction === 'ascending' ? '↑' : '↓') : ''}\r\n          </th>\r\n          {tabNames.map((tab, index) => (\r\n            <th key={index} onClick={() => sortData(tab)}>\r\n              {tab} {sortConfig.key === tab ? (sortConfig.direction === 'ascending' ? '↑' : '↓') : ''}\r\n            </th>\r\n          ))}\r\n          <th onClick={() => sortData('Total')}>Total {sortConfig.key === 'Total' ? (sortConfig.direction === 'ascending' ? '↑' : '↓') : ''}</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {data.map((row, rowIndex) => (\r\n          <tr key={rowIndex}>\r\n            <td>{isWeekly ? row.weekStart : row.date}</td>\r\n            {tabNames.map((tab, cellIndex) => (\r\n              <td\r\n                key={cellIndex}\r\n                className={row[tab] > 0 ? 'positive' : row[tab] < 0 ? 'negative' : ''}\r\n              >\r\n                {row[tab] !== undefined ? Math.round(row[tab]) : '-'}\r\n              </td>\r\n            ))}\r\n            <td\r\n              className={row.Total > 0 ? 'positive' : row.Total < 0 ? 'negative' : ''}\r\n            >\r\n              {Math.round(row.Total)}\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h1>Performance Summary</h1>\r\n      <div>\r\n        <button onClick={() => setView('daily')}>Daily Summary</button>\r\n        <button onClick={() => setView('weekly')}>Weekly Summary</button>\r\n      </div>\r\n      {view === 'daily' ? (\r\n        <>\r\n          <h2>Daily Summary</h2>\r\n          {renderTable(summaryData, false)}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h2>Weekly Summary</h2>\r\n          {renderTable(weeklySummaryData, true)}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleSheetData;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}