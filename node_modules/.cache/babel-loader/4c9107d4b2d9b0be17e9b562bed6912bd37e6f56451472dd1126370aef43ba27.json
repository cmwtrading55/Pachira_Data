{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CMW1\\\\Downloads\\\\pachira-financials\\\\src\\\\components\\\\SummaryTable.js\";\n// src/components/SummaryTable.js\nimport React from 'react';\nimport './SummaryTable.css'; // Optional: Add your styles here\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SummaryTable = ({\n  data,\n  sortConfig,\n  sortData,\n  isWeekly,\n  isAllSummary,\n  isIncome,\n  tabNames\n}) => {\n  // Function to format numbers with commas\n  const formatNumber = num => {\n    if (num !== null && !isNaN(num)) {\n      return num.toLocaleString(); // Adds commas to the number\n    }\n    return '-';\n  };\n\n  // Calculate the total row for the All Summary view\n  const calculateTotalRow = () => {\n    const totalPL = data.reduce((sum, row) => sum + row.totalPL, 0);\n    const totalTurnover = data.reduce((sum, row) => sum + row.totalTurnover, 0);\n    const roi = totalTurnover !== 0 ? totalPL / totalTurnover * 100 : 0;\n    return {\n      tabName: 'Total',\n      totalPL,\n      totalTurnover,\n      roi\n    };\n  };\n  const totalRow = isAllSummary ? calculateTotalRow() : null;\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    border: \"1\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: isIncome ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sortData(isWeekly ? 'weekStart' : 'date'),\n            children: [isWeekly ? 'Week Starting' : 'Date', \" \", sortConfig.key === (isWeekly ? 'weekStart' : 'date') ? sortConfig.direction === 'ascending' ? '↑' : '↓' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sortData('income'),\n            children: [\"Income \", sortConfig.key === 'income' ? sortConfig.direction === 'ascending' ? '↑' : '↓' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : isAllSummary ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sortData('tabName'),\n            children: [\"Tab \", sortConfig.key === 'tabName' ? sortConfig.direction === 'ascending' ? '↑' : '↓' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sortData('totalPL'),\n            children: [\"Total P/L \", sortConfig.key === 'totalPL' ? sortConfig.direction === 'ascending' ? '↑' : '↓' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sortData('totalTurnover'),\n            children: [\"Total Turnover \", sortConfig.key === 'totalTurnover' ? sortConfig.direction === 'ascending' ? '↑' : '↓' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sortData('roi'),\n            children: [\"ROI (%) \", sortConfig.key === 'roi' ? sortConfig.direction === 'ascending' ? '↑' : '↓' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sortData(isWeekly ? 'weekStart' : 'date'),\n            children: [isWeekly ? 'Week Starting' : 'Date', \" \", sortConfig.key === (isWeekly ? 'weekStart' : 'date') ? sortConfig.direction === 'ascending' ? '↑' : '↓' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), tabNames.map((tab, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sortData(tab),\n            children: [tab, \" \", sortConfig.key === tab ? sortConfig.direction === 'ascending' ? '↑' : '↓' : '']\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sortData('Total'),\n            children: [\"Total \", sortConfig.key === 'Total' ? sortConfig.direction === 'ascending' ? '↑' : '↓' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: [data.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: isIncome ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: isWeekly ? row.weekStart : row.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatNumber(Math.round(row.income))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : isAllSummary ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.tabName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: row.totalPL > 0 ? 'positive' : row.totalPL < 0 ? 'negative' : '',\n            children: formatNumber(Math.round(row.totalPL))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatNumber(Math.round(row.totalTurnover))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: row.roi > 0 ? 'positive' : row.roi < 0 ? 'negative' : '',\n            children: [row.roi.toFixed(2), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: isWeekly ? row.weekStart : row.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), tabNames.map((tab, cellIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: row[tab] > 0 ? 'positive' : row[tab] < 0 ? 'negative' : '',\n            children: row[tab] !== undefined ? formatNumber(Math.round(row[tab])) : '-'\n          }, cellIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: row.Total > 0 ? 'positive' : row.Total < 0 ? 'negative' : '',\n            children: formatNumber(Math.round(row.Total))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)), isAllSummary && /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: totalRow.tabName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: totalRow.totalPL > 0 ? 'positive' : totalRow.totalPL < 0 ? 'negative' : '',\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: formatNumber(Math.round(totalRow.totalPL))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: formatNumber(Math.round(totalRow.totalTurnover))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: totalRow.roi > 0 ? 'positive' : totalRow.roi < 0 ? 'negative' : '',\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [totalRow.roi.toFixed(2), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = SummaryTable;\nexport default SummaryTable;\nvar _c;\n$RefreshReg$(_c, \"SummaryTable\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","SummaryTable","data","sortConfig","sortData","isWeekly","isAllSummary","isIncome","tabNames","formatNumber","num","isNaN","toLocaleString","calculateTotalRow","totalPL","reduce","sum","row","totalTurnover","roi","tabName","totalRow","border","children","onClick","key","direction","fileName","_jsxFileName","lineNumber","columnNumber","map","tab","index","rowIndex","weekStart","date","Math","round","income","className","toFixed","cellIndex","undefined","Total","_c","$RefreshReg$"],"sources":["C:/Users/CMW1/Downloads/pachira-financials/src/components/SummaryTable.js"],"sourcesContent":["// src/components/SummaryTable.js\r\nimport React from 'react';\r\nimport './SummaryTable.css'; // Optional: Add your styles here\r\n\r\nconst SummaryTable = ({ data, sortConfig, sortData, isWeekly, isAllSummary, isIncome, tabNames }) => {\r\n  // Function to format numbers with commas\r\n  const formatNumber = (num) => {\r\n    if (num !== null && !isNaN(num)) {\r\n      return num.toLocaleString(); // Adds commas to the number\r\n    }\r\n    return '-';\r\n  };\r\n\r\n  // Calculate the total row for the All Summary view\r\n  const calculateTotalRow = () => {\r\n    const totalPL = data.reduce((sum, row) => sum + row.totalPL, 0);\r\n    const totalTurnover = data.reduce((sum, row) => sum + row.totalTurnover, 0);\r\n    const roi = totalTurnover !== 0 ? (totalPL / totalTurnover) * 100 : 0;\r\n\r\n    return {\r\n      tabName: 'Total',\r\n      totalPL,\r\n      totalTurnover,\r\n      roi\r\n    };\r\n  };\r\n\r\n  const totalRow = isAllSummary ? calculateTotalRow() : null;\r\n\r\n  return (\r\n    <table border=\"1\">\r\n      <thead>\r\n        <tr>\r\n          {isIncome ? (\r\n            <>\r\n              <th onClick={() => sortData(isWeekly ? 'weekStart' : 'date')}>\r\n                {isWeekly ? 'Week Starting' : 'Date'} {sortConfig.key === (isWeekly ? 'weekStart' : 'date') ? (sortConfig.direction === 'ascending' ? '↑' : '↓') : ''}\r\n              </th>\r\n              <th onClick={() => sortData('income')}>\r\n                Income {sortConfig.key === 'income' ? (sortConfig.direction === 'ascending' ? '↑' : '↓') : ''}\r\n              </th>\r\n            </>\r\n          ) : isAllSummary ? (\r\n            <>\r\n              <th onClick={() => sortData('tabName')}>\r\n                Tab {sortConfig.key === 'tabName' ? (sortConfig.direction === 'ascending' ? '↑' : '↓') : ''}\r\n              </th>\r\n              <th onClick={() => sortData('totalPL')}>\r\n                Total P/L {sortConfig.key === 'totalPL' ? (sortConfig.direction === 'ascending' ? '↑' : '↓') : ''}\r\n              </th>\r\n              <th onClick={() => sortData('totalTurnover')}>\r\n                Total Turnover {sortConfig.key === 'totalTurnover' ? (sortConfig.direction === 'ascending' ? '↑' : '↓') : ''}\r\n              </th>\r\n              <th onClick={() => sortData('roi')}>\r\n                ROI (%) {sortConfig.key === 'roi' ? (sortConfig.direction === 'ascending' ? '↑' : '↓') : ''}\r\n              </th>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <th onClick={() => sortData(isWeekly ? 'weekStart' : 'date')}>\r\n                {isWeekly ? 'Week Starting' : 'Date'} {sortConfig.key === (isWeekly ? 'weekStart' : 'date') ? (sortConfig.direction === 'ascending' ? '↑' : '↓') : ''}\r\n              </th>\r\n              {tabNames.map((tab, index) => (\r\n                <th key={index} onClick={() => sortData(tab)}>\r\n                  {tab} {sortConfig.key === tab ? (sortConfig.direction === 'ascending' ? '↑' : '↓') : ''}\r\n                </th>\r\n              ))}\r\n              <th onClick={() => sortData('Total')}>\r\n                Total {sortConfig.key === 'Total' ? (sortConfig.direction === 'ascending' ? '↑' : '↓') : ''}\r\n              </th>\r\n            </>\r\n          )}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {data.map((row, rowIndex) => (\r\n          <tr key={rowIndex}>\r\n            {isIncome ? (\r\n              <>\r\n                <td>{isWeekly ? row.weekStart : row.date}</td>\r\n                <td>{formatNumber(Math.round(row.income))}</td>\r\n              </>\r\n            ) : isAllSummary ? (\r\n              <>\r\n                <td>{row.tabName}</td>\r\n                <td className={row.totalPL > 0 ? 'positive' : row.totalPL < 0 ? 'negative' : ''}>\r\n                  {formatNumber(Math.round(row.totalPL))}\r\n                </td>\r\n                <td>{formatNumber(Math.round(row.totalTurnover))}</td>\r\n                <td className={row.roi > 0 ? 'positive' : row.roi < 0 ? 'negative' : ''}>\r\n                  {row.roi.toFixed(2)}%\r\n                </td>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <td>{isWeekly ? row.weekStart : row.date}</td>\r\n                {tabNames.map((tab, cellIndex) => (\r\n                  <td\r\n                    key={cellIndex}\r\n                    className={row[tab] > 0 ? 'positive' : row[tab] < 0 ? 'negative' : ''}\r\n                  >\r\n                    {row[tab] !== undefined ? formatNumber(Math.round(row[tab])) : '-'}\r\n                  </td>\r\n                ))}\r\n                <td className={row.Total > 0 ? 'positive' : row.Total < 0 ? 'negative' : ''}>\r\n                  {formatNumber(Math.round(row.Total))}\r\n                </td>\r\n              </>\r\n            )}\r\n          </tr>\r\n        ))}\r\n        {isAllSummary && (\r\n          <tr>\r\n            <td><strong>{totalRow.tabName}</strong></td>\r\n            <td className={totalRow.totalPL > 0 ? 'positive' : totalRow.totalPL < 0 ? 'negative' : ''}>\r\n              <strong>{formatNumber(Math.round(totalRow.totalPL))}</strong>\r\n            </td>\r\n            <td><strong>{formatNumber(Math.round(totalRow.totalTurnover))}</strong></td>\r\n            <td className={totalRow.roi > 0 ? 'positive' : totalRow.roi < 0 ? 'negative' : ''}>\r\n              <strong>{totalRow.roi.toFixed(2)}%</strong>\r\n            </td>\r\n          </tr>\r\n        )}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default SummaryTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}