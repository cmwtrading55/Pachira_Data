{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CMW1\\\\Downloads\\\\pachira-financials\\\\src\\\\components\\\\GoogleSheetData.js\",\n  _s = $RefreshSig$();\n// src/components/GoogleSheetData.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoogleSheetData = () => {\n  _s();\n  const [summaryData, setSummaryData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [sortConfig, setSortConfig] = useState({\n    key: 'date',\n    direction: 'ascending'\n  });\n  const sheetId = '1D2B33Uj1vS_weRZQAQdMRcaQbk1KG1SAjNfoaHAKrSo'; // Your Google Sheet ID\n  const apiKey = 'AIzaSyBAPhvHyE-PbFUktWwlt-2_KJfwQTabEvQ'; // Your API Key\n  const tabNames = ['S1', 'S2', 'S3PM', 'S3IR', 'follow']; // List of your sheet tabs\n  const plColumnIndex = 8; // Index for the P/L column (Column I)\n\n  useEffect(() => {\n    const fetchAllData = async () => {\n      try {\n        // Fetch data from all tabs\n        const tabDataPromises = tabNames.map(tab => axios.get(`https://sheets.googleapis.com/v4/spreadsheets/${sheetId}/values/${tab}?key=${apiKey}`));\n\n        // Wait for all promises to resolve\n        const responses = await Promise.all(tabDataPromises);\n\n        // Combine all data into a summary object\n        const summary = {};\n        responses.forEach((response, tabIndex) => {\n          const tabData = response.data.values || [];\n          const tabName = tabNames[tabIndex];\n\n          // Skip the header row and process each row\n          tabData.slice(1).forEach(row => {\n            const date = row[0]; // Date column\n\n            // Check if P/L column exists and has a valid number\n            if (row[plColumnIndex] !== undefined && !isNaN(parseFloat(row[plColumnIndex]))) {\n              const pl = parseFloat(row[plColumnIndex]) || 0; // P/L column (convert to number)\n\n              if (!summary[date]) {\n                summary[date] = {\n                  date\n                };\n              }\n              summary[date][tabName] = (summary[date][tabName] || 0) + pl;\n            }\n          });\n        });\n\n        // Convert summary object to array and calculate total\n        const summaryArray = Object.values(summary).map(entry => {\n          const total = tabNames.reduce((acc, tab) => acc + (entry[tab] || 0), 0);\n          return {\n            ...entry,\n            Total: total\n          };\n        });\n        setSummaryData(summaryArray);\n      } catch (error) {\n        setError('Error fetching data');\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAllData();\n  }, []);\n  const sortData = key => {\n    let direction = 'ascending';\n    if (sortConfig.key === key && sortConfig.direction === 'ascending') {\n      direction = 'descending';\n    }\n    const sortedData = [...summaryData].sort((a, b) => {\n      if (key === 'date') {\n        // For date, convert to Date object and compare\n        return direction === 'ascending' ? new Date(a[key].split('/').reverse().join('-')) - new Date(b[key].split('/').reverse().join('-')) : new Date(b[key].split('/').reverse().join('-')) - new Date(a[key].split('/').reverse().join('-'));\n      } else {\n        // For other columns, compare numerical values\n        const aValue = a[key] !== undefined ? a[key] : 0;\n        const bValue = b[key] !== undefined ? b[key] : 0;\n        return direction === 'ascending' ? aValue - bValue : bValue - aValue;\n      }\n    });\n    setSummaryData(sortedData);\n    setSortConfig({\n      key,\n      direction\n    });\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Performance Summary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sortData('date'),\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), tabNames.map((tab, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sortData(tab),\n            children: tab\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sortData('Total'),\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: summaryData.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), tabNames.map((tab, cellIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row[tab] !== undefined ? row[tab].toFixed(2) : '-'\n          }, cellIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.Total.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, rowIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleSheetData, \"jEo4JZiIfzQffSFb9tx2ZsXddjw=\");\n_c = GoogleSheetData;\nexport default GoogleSheetData;\nvar _c;\n$RefreshReg$(_c, \"GoogleSheetData\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","GoogleSheetData","_s","summaryData","setSummaryData","loading","setLoading","error","setError","sortConfig","setSortConfig","key","direction","sheetId","apiKey","tabNames","plColumnIndex","fetchAllData","tabDataPromises","map","tab","get","responses","Promise","all","summary","forEach","response","tabIndex","tabData","data","values","tabName","slice","row","date","undefined","isNaN","parseFloat","pl","summaryArray","Object","entry","total","reduce","acc","Total","console","sortData","sortedData","sort","a","b","Date","split","reverse","join","aValue","bValue","children","fileName","_jsxFileName","lineNumber","columnNumber","border","onClick","index","rowIndex","cellIndex","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/CMW1/Downloads/pachira-financials/src/components/GoogleSheetData.js"],"sourcesContent":["// src/components/GoogleSheetData.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst GoogleSheetData = () => {\r\n  const [summaryData, setSummaryData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [sortConfig, setSortConfig] = useState({ key: 'date', direction: 'ascending' });\r\n\r\n  const sheetId = '1D2B33Uj1vS_weRZQAQdMRcaQbk1KG1SAjNfoaHAKrSo'; // Your Google Sheet ID\r\n  const apiKey = 'AIzaSyBAPhvHyE-PbFUktWwlt-2_KJfwQTabEvQ'; // Your API Key\r\n  const tabNames = ['S1', 'S2', 'S3PM', 'S3IR', 'follow']; // List of your sheet tabs\r\n  const plColumnIndex = 8; // Index for the P/L column (Column I)\r\n\r\n  useEffect(() => {\r\n    const fetchAllData = async () => {\r\n      try {\r\n        // Fetch data from all tabs\r\n        const tabDataPromises = tabNames.map((tab) =>\r\n          axios.get(`https://sheets.googleapis.com/v4/spreadsheets/${sheetId}/values/${tab}?key=${apiKey}`)\r\n        );\r\n\r\n        // Wait for all promises to resolve\r\n        const responses = await Promise.all(tabDataPromises);\r\n\r\n        // Combine all data into a summary object\r\n        const summary = {};\r\n\r\n        responses.forEach((response, tabIndex) => {\r\n          const tabData = response.data.values || [];\r\n          const tabName = tabNames[tabIndex];\r\n\r\n          // Skip the header row and process each row\r\n          tabData.slice(1).forEach(row => {\r\n            const date = row[0]; // Date column\r\n\r\n            // Check if P/L column exists and has a valid number\r\n            if (row[plColumnIndex] !== undefined && !isNaN(parseFloat(row[plColumnIndex]))) {\r\n              const pl = parseFloat(row[plColumnIndex]) || 0; // P/L column (convert to number)\r\n\r\n              if (!summary[date]) {\r\n                summary[date] = { date };\r\n              }\r\n              summary[date][tabName] = (summary[date][tabName] || 0) + pl;\r\n            }\r\n          });\r\n        });\r\n\r\n        // Convert summary object to array and calculate total\r\n        const summaryArray = Object.values(summary).map(entry => {\r\n          const total = tabNames.reduce((acc, tab) => acc + (entry[tab] || 0), 0);\r\n          return { ...entry, Total: total };\r\n        });\r\n\r\n        setSummaryData(summaryArray);\r\n      } catch (error) {\r\n        setError('Error fetching data');\r\n        console.error('Error fetching data:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAllData();\r\n  }, []);\r\n\r\n  const sortData = (key) => {\r\n    let direction = 'ascending';\r\n    if (sortConfig.key === key && sortConfig.direction === 'ascending') {\r\n      direction = 'descending';\r\n    }\r\n\r\n    const sortedData = [...summaryData].sort((a, b) => {\r\n      if (key === 'date') {\r\n        // For date, convert to Date object and compare\r\n        return direction === 'ascending'\r\n          ? new Date(a[key].split('/').reverse().join('-')) - new Date(b[key].split('/').reverse().join('-'))\r\n          : new Date(b[key].split('/').reverse().join('-')) - new Date(a[key].split('/').reverse().join('-'));\r\n      } else {\r\n        // For other columns, compare numerical values\r\n        const aValue = a[key] !== undefined ? a[key] : 0;\r\n        const bValue = b[key] !== undefined ? b[key] : 0;\r\n        return direction === 'ascending' ? aValue - bValue : bValue - aValue;\r\n      }\r\n    });\r\n\r\n    setSummaryData(sortedData);\r\n    setSortConfig({ key, direction });\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Performance Summary</h1>\r\n      <table border=\"1\">\r\n        <thead>\r\n          <tr>\r\n            <th onClick={() => sortData('date')}>Date</th>\r\n            {tabNames.map((tab, index) => (\r\n              <th key={index} onClick={() => sortData(tab)}>{tab}</th>\r\n            ))}\r\n            <th onClick={() => sortData('Total')}>Total</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {summaryData.map((row, rowIndex) => (\r\n            <tr key={rowIndex}>\r\n              <td>{row.date}</td>\r\n              {tabNames.map((tab, cellIndex) => (\r\n                <td key={cellIndex}>{row[tab] !== undefined ? row[tab].toFixed(2) : '-'}</td>\r\n              ))}\r\n              <td>{row.Total.toFixed(2)}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleSheetData;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}