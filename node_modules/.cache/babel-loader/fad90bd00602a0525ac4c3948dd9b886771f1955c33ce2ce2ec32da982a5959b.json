{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CMW1\\\\Downloads\\\\pachira-financials\\\\src\\\\components\\\\GoogleSheetData.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport axios from 'axios';\nimport './GoogleSheetData.css'; // Import CSS for conditional formatting\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GoogleSheetData = () => {\n  _s();\n  const [summaryData, setSummaryData] = useState([]);\n  const [weeklySummaryData, setWeeklySummaryData] = useState([]);\n  const [allSummaryData, setAllSummaryData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [sortConfig, setSortConfig] = useState({\n    key: 'date',\n    direction: 'ascending'\n  });\n  const [view, setView] = useState('daily'); // Track current view (daily, weekly, all)\n\n  const sheetId = '1D2B33Uj1vS_weRZQAQdMRcaQbk1KG1SAjNfoaHAKrSo'; // Your Google Sheet ID\n  const apiKey = 'AIzaSyBAPhvHyE-PbFUktWwlt-2_KJfwQTabEvQ'; // Your API Key\n\n  // Memoize the tabNames array to prevent re-creation on each render\n  const tabNames = useMemo(() => ['S1x', 'S2x', 'S3PM', 'S3IR', 'follow'], []);\n  const plColumnIndex = 8; // Index for the P/L column (Column I)\n  const turnoverColumnIndex = 5; // Index for the Turnover column (Column F)\n\n  // Function to format numbers with commas\n  const formatNumber = num => {\n    if (num !== null && !isNaN(num)) {\n      return num.toLocaleString(); // Adds commas to the number\n    }\n    return '-';\n  };\n\n  // Function to calculate weekly summary\n  const calculateWeeklySummary = useCallback(dailyData => {\n    const weeklySummary = {};\n    dailyData.forEach(row => {\n      // Validate date format and handle invalid dates\n      const dateParts = row.date.split('/');\n      if (dateParts.length !== 3) {\n        console.warn(`Skipping invalid date format: ${row.date}`);\n        return; // Skip rows with invalid date format\n      }\n      const [day, month, year] = dateParts.map(Number);\n      if (isNaN(day) || isNaN(month) || isNaN(year)) {\n        console.warn(`Skipping invalid date values: ${row.date}`);\n        return; // Skip rows with non-numeric date parts\n      }\n      const dateObj = new Date(year, month - 1, day); // Create date object (month is 0-based in JavaScript)\n      if (isNaN(dateObj.getTime())) {\n        console.warn(`Skipping invalid date object: ${row.date}`);\n        return; // Skip rows where the date object is invalid\n      }\n      const weekStart = new Date(dateObj.setDate(dateObj.getDate() - dateObj.getDay() + 1)); // Get Monday of the week\n      const weekKey = weekStart.toISOString().split('T')[0]; // Use ISO string as key for grouping\n\n      if (!weeklySummary[weekKey]) {\n        weeklySummary[weekKey] = {\n          weekStart: weekKey\n        };\n      }\n      tabNames.forEach(tab => {\n        weeklySummary[weekKey][tab] = (weeklySummary[weekKey][tab] || 0) + (row[tab] || 0);\n      });\n      weeklySummary[weekKey].Total = (weeklySummary[weekKey].Total || 0) + row.Total;\n    });\n    const weeklyArray = Object.values(weeklySummary);\n    setWeeklySummaryData(weeklyArray);\n  }, [tabNames]);\n\n  // Function to calculate All Summary with P/L, Turnover, and ROI\n  const calculateAllSummary = useCallback(dailyData => {\n    const totalSummary = {};\n    dailyData.forEach(row => {\n      tabNames.forEach(tab => {\n        totalSummary[tab] = totalSummary[tab] || {\n          totalPL: 0,\n          totalTurnover: 0,\n          roi: 0\n        };\n        totalSummary[tab].totalPL += row[tab] || 0;\n        totalSummary[tab].totalTurnover += row[`turnover_${tab}`] || 0;\n      });\n    });\n\n    // Calculate ROI and add to summary data\n    const summaryArray = Object.entries(totalSummary).map(([tab, totals]) => {\n      const roi = totals.totalTurnover !== 0 ? totals.totalPL / totals.totalTurnover * 100 : 0;\n      return {\n        tabName: tab,\n        totalPL: totals.totalPL,\n        totalTurnover: totals.totalTurnover,\n        roi\n      };\n    });\n    setAllSummaryData(summaryArray);\n  }, [tabNames]);\n  useEffect(() => {\n    const fetchAllData = async () => {\n      try {\n        // Fetch data from all tabs\n        const tabDataPromises = tabNames.map(tab => {\n          const apiUrl = `https://sheets.googleapis.com/v4/spreadsheets/${sheetId}/values/${tab}?key=${apiKey}`;\n          console.log(`Fetching data for ${tab} from URL: ${apiUrl}`);\n          return axios.get(apiUrl).then(response => ({\n            tabName: tab,\n            data: response.data\n          })).catch(error => {\n            console.error(`Error fetching data for ${tab}:`, error);\n            return {\n              tabName: tab,\n              data: null,\n              error\n            };\n          });\n        });\n\n        // Wait for all promises to resolve\n        const tabDataResults = await Promise.all(tabDataPromises);\n\n        // Combine all data into a summary object\n        const summary = {};\n        tabDataResults.forEach(({\n          tabName,\n          data,\n          error\n        }) => {\n          if (data === null) {\n            console.error(`No data received for ${tabName}. Error:`, error !== null && error !== void 0 && error.response ? error.response.data : error.message);\n            return;\n          }\n          const tabData = data.values || [];\n\n          // Debugging: Log the first few rows to check structure\n          console.log(`Data for ${tabName}:`, tabData.slice(0, 5));\n\n          // Check if there is data in the tab\n          if (tabData.length < 2) {\n            console.warn(`No data found in tab ${tabName}`);\n          } else {\n            console.log(`Total rows in ${tabName}:`, tabData.length);\n          }\n\n          // Skip the header row and process each row\n          tabData.slice(1).forEach((row, rowIndex) => {\n            const date = row[0]; // Date column\n\n            // Check if P/L column exists and has a valid number\n            if (row[plColumnIndex] !== undefined) {\n              // Remove commas and parse the number\n              const plRaw = row[plColumnIndex].replace(/,/g, '').trim();\n              const pl = parseFloat(plRaw);\n\n              // Remove commas and parse the turnover\n              const turnoverRaw = row[turnoverColumnIndex] !== undefined ? row[turnoverColumnIndex].replace(/,/g, '').trim() : 0;\n              const turnover = parseFloat(turnoverRaw);\n              if (!isNaN(pl)) {\n                if (!summary[date]) {\n                  summary[date] = {\n                    date\n                  };\n                }\n                summary[date][tabName] = (summary[date][tabName] || 0) + pl;\n                summary[date][`turnover_${tabName}`] = (summary[date][`turnover_${tabName}`] || 0) + turnover;\n\n                // Debugging: Log each row processing\n                console.log(`Processing row ${rowIndex + 1} for ${tabName} on ${date}:`, row, `Parsed P/L: ${pl}`, `Parsed Turnover: ${turnover}`);\n              } else {\n                console.warn(`Invalid P/L value at row ${rowIndex + 1} for ${tabName} on ${date}:`, row[plColumnIndex]);\n              }\n            } else {\n              console.warn(`Missing P/L value at row ${rowIndex + 1} for ${tabName} on ${date}`);\n            }\n          });\n        });\n\n        // Convert summary object to array and calculate total\n        const summaryArray = Object.values(summary).map(entry => {\n          const total = tabNames.reduce((acc, tab) => acc + (entry[tab] || 0), 0);\n          return {\n            ...entry,\n            Total: total\n          };\n        });\n        setSummaryData(summaryArray);\n        calculateWeeklySummary(summaryArray); // Calculate weekly summary\n        calculateAllSummary(summaryArray); // Calculate All summary\n      } catch (error) {\n        setError('Error fetching data');\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAllData();\n  }, [apiKey, sheetId, tabNames, calculateWeeklySummary, calculateAllSummary]); // Added missing dependencies\n\n  const sortData = key => {\n    let direction = 'ascending';\n    if (sortConfig.key === key && sortConfig.direction === 'ascending') {\n      direction = 'descending';\n    }\n    const dataToSort = view === 'daily' ? summaryData : view === 'weekly' ? weeklySummaryData : allSummaryData;\n    const sortedData = [...dataToSort].sort((a, b) => {\n      if (key === 'date' || key === 'weekStart') {\n        // For date or weekStart, convert to Date object and compare\n        return direction === 'ascending' ? new Date(a[key].split('/').reverse().join('-')) - new Date(b[key].split('/').reverse().join('-')) : new Date(b[key].split('/').reverse().join('-')) - new Date(a[key].split('/').reverse().join('-'));\n      } else {\n        // For other columns, compare numerical values\n        const aValue = a[key] !== undefined ? a[key] : 0;\n        const bValue = b[key] !== undefined ? b[key] : 0;\n        return direction === 'ascending' ? aValue - bValue : bValue - aValue;\n      }\n    });\n    if (view === 'daily') {\n      setSummaryData(sortedData);\n    } else if (view === 'weekly') {\n      setWeeklySummaryData(sortedData);\n    } else {\n      setAllSummaryData(sortedData);\n    }\n    setSortConfig({\n      key,\n      direction\n    });\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 21\n  }, this);\n\n  // Function to render different tables based on view type\n  const renderTable = (data, isWeekly, isAllSummary) => /*#__PURE__*/_jsxDEV(\"table\", {\n    border: \"1\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: isAllSummary ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sortData('tabName'),\n            children: [\"Tab \", sortConfig.key === 'tabName' ? sortConfig.direction === 'ascending' ? '↑' : '↓' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sortData('totalPL'),\n            children: [\"Total P/L \", sortConfig.key === 'totalPL' ? sortConfig.direction === 'ascending' ? '↑' : '↓' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sortData('totalTurnover'),\n            children: [\"Total Turnover \", sortConfig.key === 'totalTurnover' ? sortConfig.direction === 'ascending' ? '↑' : '↓' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sortData('roi'),\n            children: [\"ROI (%) \", sortConfig.key === 'roi' ? sortConfig.direction === 'ascending' ? '↑' : '↓' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sortData(isWeekly ? 'weekStart' : 'date'),\n            children: [isWeekly ? 'Week Starting' : 'Date', \" \", sortConfig.key === (isWeekly ? 'weekStart' : 'date') ? sortConfig.direction === 'ascending' ? '↑' : '↓' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), tabNames.map((tab, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sortData(tab),\n            children: [tab, \" \", sortConfig.key === tab ? sortConfig.direction === 'ascending' ? '↑' : '↓' : '']\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sortData('Total'),\n            children: [\"Total \", sortConfig.key === 'Total' ? sortConfig.direction === 'ascending' ? '↑' : '↓' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: data.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: isAllSummary ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.tabName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: row.totalPL > 0 ? 'positive' : row.totalPL < 0 ? 'negative' : '',\n            children: formatNumber(Math.round(row.totalPL))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatNumber(Math.round(row.totalTurnover))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: row.roi > 0 ? 'positive' : row.roi < 0 ? 'negative' : '',\n            children: [row.roi.toFixed(2), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: isWeekly ? row.weekStart : row.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 17\n          }, this), tabNames.map((tab, cellIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: row[tab] > 0 ? 'positive' : row[tab] < 0 ? 'negative' : '',\n            children: row[tab] !== undefined ? formatNumber(Math.round(row[tab])) : '-'\n          }, cellIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: row.Total > 0 ? 'positive' : row.Total < 0 ? 'negative' : '',\n            children: formatNumber(Math.round(row.Total))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Performance Summary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setView('daily'),\n        children: \"Daily Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setView('weekly'),\n        children: \"Weekly Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setView('all'),\n        children: \"All Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this), view === 'daily' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Daily Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this), renderTable(summaryData, false, false)]\n    }, void 0, true) : view === 'weekly' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Weekly Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this), renderTable(weeklySummaryData, true, false)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"All Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }, this), renderTable(allSummaryData, false, true)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 300,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleSheetData, \"WKBMJsJfIm6OE70qW5nf4qG/B/I=\");\n_c = GoogleSheetData;\nexport default GoogleSheetData;\nvar _c;\n$RefreshReg$(_c, \"GoogleSheetData\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","GoogleSheetData","_s","summaryData","setSummaryData","weeklySummaryData","setWeeklySummaryData","allSummaryData","setAllSummaryData","loading","setLoading","error","setError","sortConfig","setSortConfig","key","direction","view","setView","sheetId","apiKey","tabNames","plColumnIndex","turnoverColumnIndex","formatNumber","num","isNaN","toLocaleString","calculateWeeklySummary","dailyData","weeklySummary","forEach","row","dateParts","date","split","length","console","warn","day","month","year","map","Number","dateObj","Date","getTime","weekStart","setDate","getDate","getDay","weekKey","toISOString","tab","Total","weeklyArray","Object","values","calculateAllSummary","totalSummary","totalPL","totalTurnover","roi","summaryArray","entries","totals","tabName","fetchAllData","tabDataPromises","apiUrl","log","get","then","response","data","catch","tabDataResults","Promise","all","summary","message","tabData","slice","rowIndex","undefined","plRaw","replace","trim","pl","parseFloat","turnoverRaw","turnover","entry","total","reduce","acc","sortData","dataToSort","sortedData","sort","a","b","reverse","join","aValue","bValue","children","fileName","_jsxFileName","lineNumber","columnNumber","renderTable","isWeekly","isAllSummary","border","onClick","index","className","Math","round","toFixed","cellIndex","_c","$RefreshReg$"],"sources":["C:/Users/CMW1/Downloads/pachira-financials/src/components/GoogleSheetData.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\r\nimport axios from 'axios';\r\nimport './GoogleSheetData.css'; // Import CSS for conditional formatting\r\n\r\nconst GoogleSheetData = () => {\r\n  const [summaryData, setSummaryData] = useState([]);\r\n  const [weeklySummaryData, setWeeklySummaryData] = useState([]);\r\n  const [allSummaryData, setAllSummaryData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [sortConfig, setSortConfig] = useState({ key: 'date', direction: 'ascending' });\r\n  const [view, setView] = useState('daily'); // Track current view (daily, weekly, all)\r\n\r\n  const sheetId = '1D2B33Uj1vS_weRZQAQdMRcaQbk1KG1SAjNfoaHAKrSo'; // Your Google Sheet ID\r\n  const apiKey = 'AIzaSyBAPhvHyE-PbFUktWwlt-2_KJfwQTabEvQ'; // Your API Key\r\n\r\n  // Memoize the tabNames array to prevent re-creation on each render\r\n  const tabNames = useMemo(() => ['S1x', 'S2x', 'S3PM', 'S3IR', 'follow'], []);\r\n\r\n  const plColumnIndex = 8; // Index for the P/L column (Column I)\r\n  const turnoverColumnIndex = 5; // Index for the Turnover column (Column F)\r\n\r\n  // Function to format numbers with commas\r\n  const formatNumber = (num) => {\r\n    if (num !== null && !isNaN(num)) {\r\n      return num.toLocaleString(); // Adds commas to the number\r\n    }\r\n    return '-';\r\n  };\r\n\r\n  // Function to calculate weekly summary\r\n  const calculateWeeklySummary = useCallback((dailyData) => {\r\n    const weeklySummary = {};\r\n\r\n    dailyData.forEach(row => {\r\n      // Validate date format and handle invalid dates\r\n      const dateParts = row.date.split('/');\r\n      if (dateParts.length !== 3) {\r\n        console.warn(`Skipping invalid date format: ${row.date}`);\r\n        return; // Skip rows with invalid date format\r\n      }\r\n\r\n      const [day, month, year] = dateParts.map(Number);\r\n      if (isNaN(day) || isNaN(month) || isNaN(year)) {\r\n        console.warn(`Skipping invalid date values: ${row.date}`);\r\n        return; // Skip rows with non-numeric date parts\r\n      }\r\n\r\n      const dateObj = new Date(year, month - 1, day); // Create date object (month is 0-based in JavaScript)\r\n      if (isNaN(dateObj.getTime())) {\r\n        console.warn(`Skipping invalid date object: ${row.date}`);\r\n        return; // Skip rows where the date object is invalid\r\n      }\r\n\r\n      const weekStart = new Date(dateObj.setDate(dateObj.getDate() - dateObj.getDay() + 1)); // Get Monday of the week\r\n      const weekKey = weekStart.toISOString().split('T')[0]; // Use ISO string as key for grouping\r\n\r\n      if (!weeklySummary[weekKey]) {\r\n        weeklySummary[weekKey] = { weekStart: weekKey };\r\n      }\r\n\r\n      tabNames.forEach(tab => {\r\n        weeklySummary[weekKey][tab] = (weeklySummary[weekKey][tab] || 0) + (row[tab] || 0);\r\n      });\r\n\r\n      weeklySummary[weekKey].Total = (weeklySummary[weekKey].Total || 0) + row.Total;\r\n    });\r\n\r\n    const weeklyArray = Object.values(weeklySummary);\r\n    setWeeklySummaryData(weeklyArray);\r\n  }, [tabNames]);\r\n\r\n  // Function to calculate All Summary with P/L, Turnover, and ROI\r\n  const calculateAllSummary = useCallback((dailyData) => {\r\n    const totalSummary = {};\r\n\r\n    dailyData.forEach(row => {\r\n      tabNames.forEach(tab => {\r\n        totalSummary[tab] = totalSummary[tab] || { totalPL: 0, totalTurnover: 0, roi: 0 };\r\n        totalSummary[tab].totalPL += row[tab] || 0;\r\n        totalSummary[tab].totalTurnover += row[`turnover_${tab}`] || 0;\r\n      });\r\n    });\r\n\r\n    // Calculate ROI and add to summary data\r\n    const summaryArray = Object.entries(totalSummary).map(([tab, totals]) => {\r\n      const roi = totals.totalTurnover !== 0 ? (totals.totalPL / totals.totalTurnover) * 100 : 0;\r\n      return {\r\n        tabName: tab,\r\n        totalPL: totals.totalPL,\r\n        totalTurnover: totals.totalTurnover,\r\n        roi\r\n      };\r\n    });\r\n\r\n    setAllSummaryData(summaryArray);\r\n  }, [tabNames]);\r\n\r\n  useEffect(() => {\r\n    const fetchAllData = async () => {\r\n      try {\r\n        // Fetch data from all tabs\r\n        const tabDataPromises = tabNames.map((tab) => {\r\n          const apiUrl = `https://sheets.googleapis.com/v4/spreadsheets/${sheetId}/values/${tab}?key=${apiKey}`;\r\n          console.log(`Fetching data for ${tab} from URL: ${apiUrl}`);\r\n          return axios.get(apiUrl)\r\n            .then(response => ({ tabName: tab, data: response.data }))\r\n            .catch(error => {\r\n              console.error(`Error fetching data for ${tab}:`, error);\r\n              return { tabName: tab, data: null, error };\r\n            });\r\n        });\r\n\r\n        // Wait for all promises to resolve\r\n        const tabDataResults = await Promise.all(tabDataPromises);\r\n\r\n        // Combine all data into a summary object\r\n        const summary = {};\r\n\r\n        tabDataResults.forEach(({ tabName, data, error }) => {\r\n          if (data === null) {\r\n            console.error(`No data received for ${tabName}. Error:`, error?.response ? error.response.data : error.message);\r\n            return;\r\n          }\r\n\r\n          const tabData = data.values || [];\r\n\r\n          // Debugging: Log the first few rows to check structure\r\n          console.log(`Data for ${tabName}:`, tabData.slice(0, 5));\r\n\r\n          // Check if there is data in the tab\r\n          if (tabData.length < 2) {\r\n            console.warn(`No data found in tab ${tabName}`);\r\n          } else {\r\n            console.log(`Total rows in ${tabName}:`, tabData.length);\r\n          }\r\n\r\n          // Skip the header row and process each row\r\n          tabData.slice(1).forEach((row, rowIndex) => {\r\n            const date = row[0]; // Date column\r\n\r\n            // Check if P/L column exists and has a valid number\r\n            if (row[plColumnIndex] !== undefined) {\r\n              // Remove commas and parse the number\r\n              const plRaw = row[plColumnIndex].replace(/,/g, '').trim();\r\n              const pl = parseFloat(plRaw);\r\n\r\n              // Remove commas and parse the turnover\r\n              const turnoverRaw = row[turnoverColumnIndex] !== undefined ? row[turnoverColumnIndex].replace(/,/g, '').trim() : 0;\r\n              const turnover = parseFloat(turnoverRaw);\r\n\r\n              if (!isNaN(pl)) {\r\n                if (!summary[date]) {\r\n                  summary[date] = { date };\r\n                }\r\n                summary[date][tabName] = (summary[date][tabName] || 0) + pl;\r\n                summary[date][`turnover_${tabName}`] = (summary[date][`turnover_${tabName}`] || 0) + turnover;\r\n\r\n                // Debugging: Log each row processing\r\n                console.log(`Processing row ${rowIndex + 1} for ${tabName} on ${date}:`, row, `Parsed P/L: ${pl}`, `Parsed Turnover: ${turnover}`);\r\n              } else {\r\n                console.warn(`Invalid P/L value at row ${rowIndex + 1} for ${tabName} on ${date}:`, row[plColumnIndex]);\r\n              }\r\n            } else {\r\n              console.warn(`Missing P/L value at row ${rowIndex + 1} for ${tabName} on ${date}`);\r\n            }\r\n          });\r\n        });\r\n\r\n        // Convert summary object to array and calculate total\r\n        const summaryArray = Object.values(summary).map(entry => {\r\n          const total = tabNames.reduce((acc, tab) => acc + (entry[tab] || 0), 0);\r\n          return { ...entry, Total: total };\r\n        });\r\n\r\n        setSummaryData(summaryArray);\r\n        calculateWeeklySummary(summaryArray); // Calculate weekly summary\r\n        calculateAllSummary(summaryArray); // Calculate All summary\r\n      } catch (error) {\r\n        setError('Error fetching data');\r\n        console.error('Error fetching data:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAllData();\r\n  }, [apiKey, sheetId, tabNames, calculateWeeklySummary, calculateAllSummary]); // Added missing dependencies\r\n\r\n  const sortData = (key) => {\r\n    let direction = 'ascending';\r\n        if (sortConfig.key === key && sortConfig.direction === 'ascending') {\r\n      direction = 'descending';\r\n    }\r\n\r\n    const dataToSort = view === 'daily' ? summaryData : view === 'weekly' ? weeklySummaryData : allSummaryData;\r\n\r\n    const sortedData = [...dataToSort].sort((a, b) => {\r\n      if (key === 'date' || key === 'weekStart') {\r\n        // For date or weekStart, convert to Date object and compare\r\n        return direction === 'ascending'\r\n          ? new Date(a[key].split('/').reverse().join('-')) - new Date(b[key].split('/').reverse().join('-'))\r\n          : new Date(b[key].split('/').reverse().join('-')) - new Date(a[key].split('/').reverse().join('-'));\r\n      } else {\r\n        // For other columns, compare numerical values\r\n        const aValue = a[key] !== undefined ? a[key] : 0;\r\n        const bValue = b[key] !== undefined ? b[key] : 0;\r\n        return direction === 'ascending' ? aValue - bValue : bValue - aValue;\r\n      }\r\n    });\r\n\r\n    if (view === 'daily') {\r\n      setSummaryData(sortedData);\r\n    } else if (view === 'weekly') {\r\n      setWeeklySummaryData(sortedData);\r\n    } else {\r\n      setAllSummaryData(sortedData);\r\n    }\r\n\r\n    setSortConfig({ key, direction });\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  // Function to render different tables based on view type\r\n  const renderTable = (data, isWeekly, isAllSummary) => (\r\n    <table border=\"1\">\r\n      <thead>\r\n        <tr>\r\n          {isAllSummary ? (\r\n            <>\r\n              <th onClick={() => sortData('tabName')}>\r\n                Tab {sortConfig.key === 'tabName' ? (sortConfig.direction === 'ascending' ? '↑' : '↓') : ''}\r\n              </th>\r\n              <th onClick={() => sortData('totalPL')}>\r\n                Total P/L {sortConfig.key === 'totalPL' ? (sortConfig.direction === 'ascending' ? '↑' : '↓') : ''}\r\n              </th>\r\n              <th onClick={() => sortData('totalTurnover')}>\r\n                Total Turnover {sortConfig.key === 'totalTurnover' ? (sortConfig.direction === 'ascending' ? '↑' : '↓') : ''}\r\n              </th>\r\n              <th onClick={() => sortData('roi')}>\r\n                ROI (%) {sortConfig.key === 'roi' ? (sortConfig.direction === 'ascending' ? '↑' : '↓') : ''}\r\n              </th>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <th onClick={() => sortData(isWeekly ? 'weekStart' : 'date')}>\r\n                {isWeekly ? 'Week Starting' : 'Date'} {sortConfig.key === (isWeekly ? 'weekStart' : 'date') ? (sortConfig.direction === 'ascending' ? '↑' : '↓') : ''}\r\n              </th>\r\n              {tabNames.map((tab, index) => (\r\n                <th key={index} onClick={() => sortData(tab)}>\r\n                  {tab} {sortConfig.key === tab ? (sortConfig.direction === 'ascending' ? '↑' : '↓') : ''}\r\n                </th>\r\n              ))}\r\n              <th onClick={() => sortData('Total')}>\r\n                Total {sortConfig.key === 'Total' ? (sortConfig.direction === 'ascending' ? '↑' : '↓') : ''}\r\n              </th>\r\n            </>\r\n          )}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {data.map((row, rowIndex) => (\r\n          <tr key={rowIndex}>\r\n            {isAllSummary ? (\r\n              <>\r\n                <td>{row.tabName}</td>\r\n                <td className={row.totalPL > 0 ? 'positive' : row.totalPL < 0 ? 'negative' : ''}>\r\n                  {formatNumber(Math.round(row.totalPL))}\r\n                </td>\r\n                <td>{formatNumber(Math.round(row.totalTurnover))}</td>\r\n                <td className={row.roi > 0 ? 'positive' : row.roi < 0 ? 'negative' : ''}>\r\n                  {row.roi.toFixed(2)}%\r\n                </td>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <td>{isWeekly ? row.weekStart : row.date}</td>\r\n                {tabNames.map((tab, cellIndex) => (\r\n                  <td\r\n                    key={cellIndex}\r\n                    className={row[tab] > 0 ? 'positive' : row[tab] < 0 ? 'negative' : ''}\r\n                  >\r\n                    {row[tab] !== undefined ? formatNumber(Math.round(row[tab])) : '-'}\r\n                  </td>\r\n                ))}\r\n                <td className={row.Total > 0 ? 'positive' : row.Total < 0 ? 'negative' : ''}>\r\n                  {formatNumber(Math.round(row.Total))}\r\n                </td>\r\n              </>\r\n            )}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h1>Performance Summary</h1>\r\n      <div>\r\n        <button onClick={() => setView('daily')}>Daily Summary</button>\r\n        <button onClick={() => setView('weekly')}>Weekly Summary</button>\r\n        <button onClick={() => setView('all')}>All Summary</button>\r\n      </div>\r\n      {view === 'daily' ? (\r\n        <>\r\n          <h2>Daily Summary</h2>\r\n          {renderTable(summaryData, false, false)}\r\n        </>\r\n      ) : view === 'weekly' ? (\r\n        <>\r\n          <h2>Weekly Summary</h2>\r\n          {renderTable(weeklySummaryData, true, false)}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h2>All Summary</h2>\r\n          {renderTable(allSummaryData, false, true)}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleSheetData;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}